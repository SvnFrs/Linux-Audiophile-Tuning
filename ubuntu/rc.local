#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

 sysctl -w kernel.watchdog=0
 sysctl -w kernel.watchdog_thresh=0
 sysctl -w kernel.ftrace_enabled=0
#sysctl -w kernel.kexec_load_disabled=1
#sysctl -w kernel.modules_disabled=1
 sysctl -w kernel.sched_autogroup_enabled=0
#sysctl -w kernel.sched_rt_period_us=1000000
#sysctl -w kernel.sched_rt_runtime_us=857422
 sysctl -w kernel.sched_min_granularity_ns=229978
 sysctl -w kernel.sched_wakeup_granularity_ns=388289
 sysctl -w kernel.sched_latency_ns=1394064
 sysctl -w kernel.sched_cfs_bandwidth_slice_us=1
 sysctl -w kernel.sched_migration_cost_ns=4899005
 sysctl -w kernel.sched_nr_migrate=0
 sysctl -w kernel.sched_rr_timeslice_ms=1
#sysctl -w kernel.sched_shares_window_ns=345997
#sysctl -w kernel.sched_tunable_scaling=1
#sysctl -w kernel.sched_time_avg_ms=6288
 sysctl -w kernel.printk="0 0 0 0"

#sysctl -w vm.dirty_background_ratio=0
#sysctl -w vm.dirty_ratio=0
 sysctl -w vm.dirty_writeback_centisecs=0
 sysctl -w vm.memory_failure_recovery=0
 sysctl -w vm.oom_dump_tasks=0
 sysctl -w vm.oom_kill_allocating_task=1
 sysctl -w vm.overcommit_memory=1
#sysctl -w vm.page-cluster=0
 sysctl -w vm.panic_on_oom=2
 sysctl -w vm.stat_interval=5
 sysctl -w vm.swappiness=0
 sysctl -w vm.vfs_cache_pressure=0

#sysctl -w net.core.rmem_default=211000
#sysctl -w net.core.rmem_max=211000
#sysctl -w net.core.wmem_max=211000
#sysctl -w net.core.wmem_default=211000
#sysctl -w net.ipv4.conf.default.forwarding=1
 sysctl -w net.ipv4.tcp_rmem='4520 88168 3345648'
 sysctl -w net.ipv4.tcp_wmem='4448 89848 3455464'
#sysctl -w net.ipv4.tcp_timestamps=0
#sysctl -w net.ipv4.tcp_window_scaling=1
 sysctl -w net.ipv4.tcp_sack=0
 sysctl -w net.ipv4.tcp_no_metrics_save=1
 sysctl -w net.ipv4.udp_mem='46424 57912 87614'
#sysctl -w net.core.netdev_max_backlog=5000
 sysctl -w net.ipv6.conf.all.disable_ipv6=1

#ifconfig enp3s0 txqueuelen 1875
#ifconfig wlp2s0 txqueuelen 1875

#echo hpet > /sys/devices/system/clocksource/clocksource0/current_clocksource || true
 echo 4032 > /sys/class/rtc/rtc0/max_user_freq || true
#sysctl -w dev.rtc.max-user-freq=4032 || true
 sysctl -w dev.hpet.max-user-freq=2147483520 || true

 echo 0 > /sys/fs/cgroup/cpuset/cpuset.sched_load_balance || true
#echo 1 > /sys/fs/cgroup/cpuset/cpuset.mem_hardwall || true

echo "$(ifconfig -a | grep -o ^[a-z0-9]* | grep -v lo)" | while read dev ; do
 sudo tc qdisc add dev $dev root pfifo_fast
 sudo tc qdisc add dev $dev ingress
#tc -s -d qdisc show dev $dev
done

for i in $(ls /sys/block/*/queue/scheduler); do
 if   echo $(cat $i) | grep -q none; then
  echo none > $i
 elif echo $(cat $i) | grep -q noop; then
  echo noop > $i
 fi
done

swapoff -a

cp /usr/lib/x86_64-linux-gnu/libasound.so.2.0.0.sav /dev/shm/libasound.so.2.0.0
ln -sf /dev/shm/libasound.so.2.0.0 /usr/lib/x86_64-linux-gnu/libasound.so.2.0.0
ln -sf /dev/shm/libasound.so.2.0.0 /usr/lib/x86_64-linux-gnu/libasound.so.2
ln -sf /dev/shm/libasound.so.2.0.0 /usr/lib/x86_64-linux-gnu/libasound.so
cp /usr/share/alsa/alsa.conf.sav /dev/shm/alsa.conf
ln -sf /dev/shm/alsa.conf /usr/share/alsa/alsa.conf
cp /usr/bin/nohup /usr/bin/mpd /dev/shm/
cp /etc/mpd.conf.sav /dev/shm/mpd.conf
cp /usr/lib/x86_64-linux-gnu/libaudiofile.so.1.0.0.sav /dev/shm/libaudiofile.so.1.0.0
ln -sf /dev/shm/libaudiofile.so.1.0.0 /usr/lib/x86_64-linux-gnu/libaudiofile.so.1.0.0
ln -sf /dev/shm/libaudiofile.so.1.0.0 /usr/lib/x86_64-linux-gnu/libaudiofile.so.1
ln -sf /dev/shm/libaudiofile.so.1.0.0 /usr/lib/x86_64-linux-gnu/libaudiofile.so
cp /usr/lib/x86_64-linux-gnu/libFLAC.so.8.3.0.sav /dev/shm/libFLAC.so.8.3.0
ln -sf /dev/shm/libFLAC.so.8.3.0 /usr/lib/x86_64-linux-gnu/libFLAC.so.8.3.0
ln -sf /dev/shm/libFLAC.so.8.3.0 /usr/lib/x86_64-linux-gnu/libFLAC.so.8
ln -sf /dev/shm/libFLAC.so.8.3.0 /usr/lib/x86_64-linux-gnu/libFLAC.so

for pid in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 && $4 !~ /mpd/ {print $1}'); do
 renice  -2 $pid || true
done

for pid in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration|mpd/ {print $1}'); do
 chrt -op 0 $pid || true
 renice  -3 $pid || true
done

m_task=$(($(nproc --all)-1)); h_task=0; s_task=0
[ "$m_task" -ge 3 ] && h_task=$((m_task-1)) && s_task=$((m_task-2))

if [ "$m_task" -ge 1 ];then
 for pid in $(ps -eo pid,comm | awk '$2 !~ /systemd$|lightdm|sawfish|mpd/ {print $1}'); do
  taskset -acp 0 $pid 2>/dev/null || true
 done

 until $(grep -q snd /proc/interrupts); do
  sleep 1
 done

 sleep 1

 for i in $(awk '/snd/{print +$1}' /proc/interrupts); do
  proc="/proc/irq/$i/smp_affinity"
  echo $(echo "2^$m_task" | bc) > $proc || true
  echo "$proc = $(cat $proc) ($(awk '$1 ~ /'"$i"'/{print $NF}' /proc/interrupts))"
 done
 for i in $(awk '/enp3s0|1f.2/{print +$1}' /proc/interrupts); do
  proc="/proc/irq/$i/smp_affinity"
  echo $(echo "2^$s_task" | bc) > $proc || true
  echo "$proc = $(cat $proc) ($(awk '$1 ~ /'"$i"'/{print $NF}' /proc/interrupts))"
 done
 for i in $(awk '/mei|nvkm|i915|iwlwifi|xhci/{print +$1}' /proc/interrupts); do
  proc="/proc/irq/$i/smp_affinity"
  echo $(echo "2^$m_task" | bc) > $proc || true
  echo "$proc = $(cat $proc) ($(awk '$1 ~ /'"$i"'/{print $NF}' /proc/interrupts))"
 done
 echo $(echo "2^$s_task" | bc) > /proc/irq/default_smp_affinity
fi

hdparm -A1 -a1904 -B255 /dev/sda # -M0

for i in $(ls /dev/snd/); do
 [ ! "$i" = "pcmC0D0p"  ] && [ ! "$i" = "controlC0"  ] && rm -rf "/dev/snd/$i"
done
rm /dev/snd/*D[1-9]* /dev/snd/*c /dev/snd/hw* /dev/snd/seq /dev/snd/timer || true

modprobe -r psmouse

uhubctl -a 0 -l 2-1 -p 1-6
uhubctl -a 0 -l 1-1 -p 3-6

exit 0
