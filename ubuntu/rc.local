#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

 sysctl -w kernel.watchdog=0
 sysctl -w kernel.ftrace_enabled=0
 sysctl -w kernel.sched_autogroup_enabled=0
#sysctl -w kernel.sched_rt_period_us=1344760
#sysctl -w kernel.sched_rt_runtime_us=-1
#sysctl -w kernel.sched_min_granularity_ns=2250000
#sysctl -w kernel.sched_wakeup_granularity_ns=3000000
#sysctl -w kernel.sched_latency_ns=18000000
#sysctl -w kernel.sched_cfs_bandwidth_slice_us=5000
#sysctl -w kernel.sched_migration_cost_ns=500000
 sysctl -w kernel.sched_nr_migrate=0
 sysctl -w kernel.sched_rr_timeslice_ms=40
#sysctl -w kernel.sched_shares_window_ns=10000000
#sysctl -w kernel.sched_tunable_scaling=1

 sysctl -w vm.swappiness=0
#sysctl -w vm.dirty_background_ratio=0
#sysctl -w vm.dirty_ratio=0
 sysctl -w vm.dirty_writeback_centisecs=0
 sysctl -w vm.memory_failure_recovery=0
 sysctl -w vm.oom_dump_tasks=0
#sysctl -w vm.overcommit_memory=1
 sysctl -w vm.page-cluster=2
 sysctl -w vm.panic_on_oom=2
 sysctl -w vm.stat_interval=5
 sysctl -w vm.vfs_cache_pressure=0

#sysctl -w net.core.rmem_max=12582912
#sysctl -w net.core.wmem_max=12582912
#sysctl -w net.ipv4.conf.default.forwarding=1
#sysctl -w net.ipv4.tcp_rmem='10240 87380 12582912'
#sysctl -w net.ipv4.tcp_wmem='10240 87380 12582912'
#sysctl -w net.ipv4.tcp_timestamps=0
#sysctl -w net.ipv4.tcp_window_scaling=1
 sysctl -w net.ipv4.tcp_sack=0
 sysctl -w net.ipv4.tcp_no_metrics_save=1
#sysctl -w net.core.netdev_max_backlog=5000
 sysctl -w net.ipv6.conf.all.disable_ipv6=1

#ifconfig enp3s0 txqueuelen 1875
#ifconfig wlp2s0 txqueuelen 1875

 echo 4032 > /sys/class/rtc/rtc0/max_user_freq
#sysctl -w dev.rtc.max-user-freq=4032
 sysctl -w dev.hpet.max-user-freq=2147483520

#swapoff -a

for pid in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}'); do
 chrt -op 0 $pid
done

for pid in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 && $4 !~ /mpd/ {print $1}'); do
 renice 0 $pid
done

for pid in $(ps -eo pid,comm | awk '$2 !~ /systemd/ && $2 !~ /lightdm/ && $2 !~ /sawfish/ && $2 !~ /mpd/ {print $1}'); do
 taskset -acp 0 $pid | true
done

#ln -s /usr/lib/x86_64-linux-gnu/libasound.so.2.0.0.sav /usr/lib/x86_64-linux-gnu/libasound.so.2

#systemctl start mpd
/usr/bin/mpd /etc/mpd.conf &

until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -np $(pgrep -x mpd) | grep -q output); do
 sleep 1
done

pgr_mpd=$(pgrep -x mpd)

taskset -cp 1 $pgr_mpd

echo "$(pstree -np $pgr_mpd)" | while read line ; do
    proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
 proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
 case $proc in
   mpd)		 taskset -cp 1	   $proc_nr ;;
   io)		 taskset -cp 1	   $proc_nr
		#renice +1 -p	   $proc_nr
		 chrt -bpv 0	   $proc_nr
		 ;;
   player)	 taskset -cp 3	   $proc_nr
		#renice -1 -p	   $proc_nr
		 ionice -c2 -n7 -p $proc_nr
		 chrt -fp 1	   $proc_nr
		 ;;
   decoder)	 taskset -cp 3	   $proc_nr
		#renice -1 -p	   $proc_nr
		 ionice -c2 -n6 -p $proc_nr
		 chrt -fp 2	   $proc_nr
		 ;;
   output)	 taskset -cp 3	   $proc_nr
		#renice -2 -p	   $proc_nr
		 ionice -c2 -n4 -p $proc_nr
		 chrt -fp 4	   $proc_nr ;;
 esac
done

snd=$(awk '$8 ~ /snd/ {print +$1}' /proc/interrupts)

until [ -f /proc/irq/$snd/smp_affinity ]; do
 sleep 1
done
echo 8 > /proc/irq/$snd/smp_affinity

#taskset -apc 3 `pgrep snd_hda`
#hdparm -A1 -a1088 -B255 /dev/sda

modprobe -r psmouse

#rm /usr/lib/x86_64-linux-gnu/libasound.so.2

#taskset -ac 2 nice -n +1 /usr/bin/polipo &

exit 0
