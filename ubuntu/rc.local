#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

low_pri () {
 chrt -v -ip 0 $1
 renice  18 -p $1
#ionice -c3 -p $1
}

 sysctl -w kernel.watchdog=0
 sysctl -w kernel.sched_rt_runtime_us=50446
 sysctl -w kernel.sched_rt_period_us=100000
 sysctl -w kernel.sched_min_granularity_ns=750000
 sysctl -w kernel.sched_cfs_bandwidth_slice_us=95
 sysctl -w kernel.sched_migration_cost_ns=500
 sysctl -w kernel.sched_nr_migrate=16
 sysctl -w kernel.sched_rr_timeslice_ms=5
 sysctl -w kernel.sched_shares_window_ns=3500000
 sysctl -w kernel.sched_tunable_scaling=0

 sysctl -w vm.swappiness=0
#sysctl -w vm.dirty_background_ratio=0
#sysctl -w vm.dirty_ratio=0
 sysctl -w vm.dirty_writeback_centisecs=0
 sysctl -w vm.memory_failure_recovery=0
 sysctl -w vm.oom_dump_tasks=0
#sysctl -w vm.overcommit_memory=1
 sysctl -w vm.page-cluster=2
 sysctl -w vm.panic_on_oom=2
 sysctl -w vm.stat_interval=5
 sysctl -w vm.vfs_cache_pressure=0

#sysctl -w net.core.rmem_max=12582912
#sysctl -w net.core.wmem_max=12582912
#sysctl -w net.ipv4.conf.default.forwarding=1
#sysctl -w net.ipv4.tcp_rmem='10240 87380 12582912'
#sysctl -w net.ipv4.tcp_wmem='10240 87380 12582912'
#sysctl -w net.ipv4.tcp_timestamps=0
#sysctl -w net.ipv4.tcp_window_scaling=1
 sysctl -w net.ipv4.tcp_sack=0
 sysctl -w net.ipv4.tcp_no_metrics_save=1
#sysctl -w net.core.netdev_max_backlog=5000
 sysctl -w net.ipv6.conf.all.disable_ipv6=1

 ifconfig enp3s0 txqueuelen 1875
 ifconfig wlp2s0 txqueuelen 1875

 echo 4032 > /sys/class/rtc/rtc0/max_user_freq
#sysctl -w dev.rtc.max-user-freq=4032
 sysctl -w dev.hpet.max-user-freq=2147483520

#swapoff -a

for pid in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}') ; do
 chrt -op 0 $pid
done

for pid in $(ps -eo pid,class,ni | grep -i TS | awk '$3 < 0 {print $1}') ; do
 renice 0 $pid
done

#ln -s /usr/lib/x86_64-linux-gnu/libasound.so.2.0.0.sav /usr/lib/x86_64-linux-gnu/libasound.so.2

systemctl start mpd

until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -np $(pgrep -x mpd) | grep -q output); do
 sleep 1
done

pgr_mpd=$(pgrep -x mpd)

 taskset -pc 0 $pgr_mpd
 renice   3 -p $pgr_mpd

echo "$(pstree -np $pgr_mpd)" | while read line ; do
    proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
 proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
 case $proc in
   mpd)		taskset -cp 0 $proc_nr
		chrt -v -ip 0 $proc_nr
		renice  18 -p $proc_nr ;;
   io)		taskset -cp 1 $proc_nr
		renice   4 -p $proc_nr ;;
   player)	taskset -cp 1 $proc_nr
		renice   2 -p $proc_nr ;;
   decoder)	taskset -cp 2 $proc_nr
		renice   1 -p $proc_nr ;;
   output)	taskset -cp 3 $proc_nr
		chrt -v -op 0 $proc_nr ;;
 esac
done

snd=$(awk '$8 ~ /snd/ {print +$1}' /proc/interrupts)

until [ -f /proc/irq/$snd/smp_affinity ]; do
 sleep 1
done
echo   8 > /proc/irq/$snd/smp_affinity

#taskset -apc 3 `pgrep snd_hda`
#hdparm -A1 -a1752 -B255 /dev/sda

modprobe -r psmouse

#rm /usr/lib/x86_64-linux-gnu/libasound.so.2

chrt -i 0 taskset -ac 0 nice -n 19 polipo >/dev/null 2>&1 &

exit 0
