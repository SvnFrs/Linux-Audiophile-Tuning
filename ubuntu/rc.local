#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

 echo 4032 > /sys/class/rtc/rtc0/max_user_freq
#sysctl -w dev.rtc.max-user-freq=4032
 sysctl -w dev.hpet.max-user-freq=2147483520

 ifconfig enp3s0 txqueuelen 10000
 ifconfig wlp2s0 txqueuelen 10000

 sysctl -w kernel.watchdog=0

 sysctl -w net.core.rmem_max=12582912
 sysctl -w net.core.wmem_max=12582912
#sysctl -w net.ipv4.conf.default.forwarding=1
 sysctl -w net.ipv4.tcp_rmem='10240 87380 12582912'
 sysctl -w net.ipv4.tcp_wmem='10240 87380 12582912'
 sysctl -w net.ipv4.tcp_timestamps=0
#sysctl -w net.ipv4.tcp_window_scaling=1
 sysctl -w net.ipv4.tcp_sack=0
 sysctl -w net.ipv4.tcp_no_metrics_save=1
 sysctl -w net.core.netdev_max_backlog=5000
 sysctl -w net.ipv6.conf.all.disable_ipv6=1

 modprobe -r psmouse

for pid in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}') ; do
 chrt -op 0 $pid
done

for pid in $(ps -eo pid,class,ni | grep -i TS | awk '$3 < 0 {print $1}') ; do
 sudo renice 0 $pid
done

systemctl start mpd

until [ -f /run/mpd/pid ]; do
 sleep 1
done

#sleep 10

pg_mpd=$(pgrep -F /run/mpd/pid)

if [ "$(($(chrt -ap "$pg_mpd" | wc -l)/2))" != "5" ]; then
 sleep 5
fi

chrt   -aop 0 $pg_mpd
taskset -pc 1 $pg_mpd

echo "$(pstree -np $pg_mpd)" | while read line ; do
    proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
 proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
 case $proc in
  mpd)		sudo taskset -pc 1 $proc_nr ;;
  io)		sudo taskset -pc 0 $proc_nr ;;
  player)	sudo taskset -pc 3 $proc_nr ;;
  decoder)	sudo taskset -pc 2 $proc_nr ;;
  output)	sudo taskset -pc 3 $proc_nr ;;
 esac
done

until [ -f /proc/irq/$(awk '$8 ~ /snd/ {print +$1}' /proc/interrupts)/smp_affinity ]; do
 sleep 1
done
echo 8 > /proc/irq/$(awk '$8 ~ /snd/ {print +$1}' /proc/interrupts)/smp_affinity

#taskset -apc 3 `pgrep snd_hda`
#hdparm -A1 -a1664 -B255 /dev/sda

exit 0
