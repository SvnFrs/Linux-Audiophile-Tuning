#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

#sysctl -w debug.exception-trace=0
#sysctl -w kernel.watchdog=0
#sysctl -w kernel.sched_rt_runtime_us=-1
#sysctl -w kernel.sched_rt_period_us=42700
# sysctl -w kernel.printk='4 4 1 4'
#sysctl -w vm.swappiness=0
# sysctl -w vm.overcommit_memory=1
#sysctl -w vm.overcommit_ratio=100
# sysctl -w vm.dirty_writeback_centisecs=0
# sysctl -w vm.oom_dump_tasks=0
# sysctl -w vm.oom_kill_allocating_task=1
# sysctl -w vm.panic_on_oom=1
# sysctl -w vm.stat_interval=3
#sysctl -w vm.user_reserve_kbytes=0

ifconfig eth0 txqueuelen 10000

 sysctl -w net.core.rmem_max=12582912
 sysctl -w net.core.wmem_max=12582912
#sysctl -w net.ipv4.conf.default.forwarding=1
 sysctl -w net.ipv4.tcp_rmem='10240 87380 12582912'
 sysctl -w net.ipv4.tcp_wmem='10240 87380 12582912'
 sysctl -w net.ipv4.tcp_timestamps=0
#sysctl -w net.ipv4.tcp_window_scaling=1
 sysctl -w net.ipv4.tcp_sack=0
 sysctl -w net.ipv4.tcp_no_metrics_save=1
 sysctl -w net.core.netdev_max_backlog=5000
#sysctl -w net.ipv6.conf.all.disable_ipv6=1

#chrt -aip 0     `pgrep -ox systemd`
#ionice -c 3 -p  `pgrep -ox systemd`
#renice -n 19 -p `pgrep -ox systemd`
 taskset -acp 0  `pgrep -ox systemd`

PIDS=`ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}'`
for PID in ${PIDS}
do
    chrt -op 0 ${PID}
done

#PIDS=`ps h -eo pid,class,comm | awk '$3 !~ /mpd/ && $3 !~ /otg/ {print $1}'`
#for PID in ${PIDS}
#do
#    taskset -acp 0-1 ${PID} || /bin/true
#done

PIDS=`ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 && $4 !~ /dwc_otg/ {print $1}'`
for PID in ${PIDS}
do
    renice 0 ${PID}
done

renice 0       `pgrep dwc_otg`
#taskset -acp 3 `pgrep dwc_otg`
#ionice -c 0 -p `pgrep dwc_otg`

#taskset -acp 3 `pgrep kodi.bin`
##ionice -c 0 -p `pgrep kodi.bin`

sleep 7
taskset -acp 0-1 `pgrep -x kodi.bin`
FDE_PID=$(pstree -np `pgrep kodi.bin` | grep FDE      | grep -o '[0-9]*' | sed -n 2p)
AAE_PIDS=$(pstree -np `pgrep kodi.bin` | grep ActiveAE | grep -o '[0-9]*')
AES_PIDS=$(pstree -np `pgrep kodi.bin` | grep AESink   | grep -o '[0-9]*')
CEC_PID=$(pstree -np `pgrep kodi.bin` | grep CEC      | grep -o '[0-9]*')
USB_PID=$(pstree -np `pgrep kodi.bin` | grep USB      | grep -o '[0-9]*')
 RC_PID=$(pstree -np `pgrep kodi.bin` | grep Remote   | grep -o '[0-9]*')
VCH_PID=$(pstree -np `pgrep kodi.bin` | grep VCH      | grep -o '[0-9]*')
Not_PID=$(pstree -np `pgrep kodi.bin` | grep Not      | grep -o '[0-9]*')
ILC_PID=$(pstree -np `pgrep kodi.bin` | grep ILC      | grep -o '[0-9]*')
ker_PID=$(pstree -np `pgrep kodi.bin` | grep ker      | grep -o '[0-9]*')
#DVD_PID=$(pstree -np `pgrep kodi.bin` | grep DVD      | grep -o '[0-9]*')
#TIM_PID=$(pstree -np `pgrep kodi.bin` | grep Timer    | grep -o '[0-9]*')

for AES_PID in ${AES_PIDS}
do
 taskset -cp  2 "$AES_PID"
done

for AAE_PID in ${AAE_PIDS}
do
 taskset -cp  3 "$AAE_PID"
done

for i in "$FDE_PID" "$CEC_PID" "$USB_PID" "$RC_PID" "$VCH_PID" "$Not_PID" "$ILC_PID" "$ker_PID" # "$DVD_PID" "$TIM_PID"
do
 chrt   -ip 0    $i
 ionice -c  3 -p $i
 renice -n 19 -p $i
done

### Turn off USB
 /home/osmc/hub-ctrl -h 0 -P 5 -p 0
 /home/osmc/hub-ctrl -h 0 -P 4 -p 0
#/home/osmc/hub-ctrl -h 0 -P 2 -p 0 # Power off USB

/home/osmc/llctl f0 l0 d0

echo noop > /sys/block/mmcblk0/queue/scheduler

echo none > /sys/class/leds/led0/trigger
echo 0    > /sys/class/leds/led0/brightness
echo 0    > /sys/class/leds/led1/brightness

service systemd-journald stop
service systemd-udevd stop
service systemd-logind stop
service	ntp stop
service	ssh stop
service	udisks stop
service	udisks-glue stop
service	rpcbind stop
service	polkitd stop
service	wpa_supplicant stop

exit 0
