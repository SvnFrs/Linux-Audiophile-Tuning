#!/bin/bash

#sysctl -w vm.dirty_background_ratio=0
#sysctl -w vm.dirty_ratio=0
 sysctl -w vm.dirty_writeback_centisecs=0
 sysctl -w vm.oom_dump_tasks=0
 sysctl -w vm.oom_kill_allocating_task=1
 sysctl -w vm.overcommit_memory=2
#sysctl -w vm.page-cluster=0
 sysctl -w vm.panic_on_oom=2
 sysctl -w vm.stat_interval=5
 sysctl -w vm.swappiness=0
 sysctl -w vm.vfs_cache_pressure=0

#sysctl -w kernel.ftrace_enabled=0
#sysctl -w kernel.modules_disabled=1
#sysctl -w kernel.sched_autogroup_enabled=0
#sysctl -w kernel.sched_rt_runtime_us=-1
#sysctl -w kernel.sched_rt_period_us=1344760
#sysctl -w kernel.sched_rt_runtime_us=1277522
 sysctl -w kernel.sched_min_granularity_ns=229978
 sysctl -w kernel.sched_wakeup_granularity_ns=388288
 sysctl -w kernel.sched_latency_ns=1394063
 sysctl -w kernel.sched_cfs_bandwidth_slice_us=1
 sysctl -w kernel.sched_migration_cost_ns=4899004
 sysctl -w kernel.sched_nr_migrate=0
 sysctl -w kernel.sched_rr_timeslice_ms=1
#sysctl -w kernel.sched_shares_window=345997
 sysctl -w kernel.sched_tunable_scaling=0
#sysctl -w kernel.sched_time_avg=6288
 sysctl -w kernel.printk="0 0 0 0"

#sysctl -w net.core.rmem_max=12582912
#sysctl -w net.core.wmem_max=12582912
#sysctl -w net.ipv4.conf.default.forwarding=1
#sysctl -w net.ipv4.tcp_rmem='10240 87380 12582912'
#sysctl -w net.ipv4.tcp_wmem='10240 87380 12582912'
#sysctl -w net.ipv4.tcp_timestamps=0
#sysctl -w net.ipv4.tcp_window_scaling=1
 sysctl -w net.ipv4.tcp_sack=0
 sysctl -w net.ipv4.tcp_no_metrics_save=1
#sysctl -w net.core.netdev_max_backlog=5000
 sysctl -w net.ipv6.conf.all.disable_ipv6=1

#echo 1000000 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_rate || true
#echo 1 > /sys/devices/system/cpu/cpufreq/ondemand/ignore_nice_load || true
#echo 100 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor || true
[ -e /sys/fs/cgroup/cpuset/cpuset.sched_load_balance ] && echo 0 > /sys/fs/cgroup/cpuset/cpuset.sched_load_balance || true

#echo ondemand | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
#echo ondemand > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
#echo ondemand > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
#echo none > /sys/class/leds/bananapi\:green\:usr/trigger

for i in $(ls /sys/block/*/queue/scheduler); do
 if   echo $(cat $i) | grep -q none; then
  echo none > $i
 elif echo $(cat $i) | grep -q noop; then
  echo noop > $i
 fi
done

for i in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 {print $1}'); do
 renice  -2 $i
done

for i in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration|mpd/ {print $1}'); do
 chrt -op 0 $i
 renice  -3 $i
done

m_task=$(($(nproc --all)-1)); h_task=0; s_task=0
[ "$m_task" -ge 3 ] && h_task=$((m_task-1)) && s_task=$((m_task-2))

if [ "$m_task" -ge 1 ];then
 for pid in $(ps -eo pid,comm | awk '$2 !~ /systemd$|mpd|networkaudiod|squeezelite/ {print $1}'); do
  taskset -acp 0 $pid 2>/dev/null || true
 done
fi

[ -r /etc/default/audio.conf ] && . /etc/default/audio.conf

systemctl stop dbus.service dbus.socket haveged systemd-udevd # polkit

[ "$ssh" = off ]    && systemctl stop sshd
[ "$serial" = off ] && systemctl stop serial-getty@ttyS0

swapoff -a

### Init
taskset -cp $s_task 1

for i in /usr/bin/nohup /usr/bin/rygel /etc/rygel.conf /usr/sbin/minidlnad /etc/minidlan.conf; do
 [ -e $i ] && cp $i /dev/shm/
done

(
 for i in $(awk '/eth|ahci/{print +$1}' /proc/interrupts); do
  echo 1 > /proc/irq/$i/smp_affinity || true
 done

 for i in $(awk '/serial/{print +$1}' /proc/interrupts); do
  echo 2 > /proc/irq/$i/smp_affinity  || true
 done

 echo 1 > /proc/irq/default_smp_affinity

#until [ $(pgrep -x rygel) -gt 0 ] 2>/dev/null; do
#until pstree -npt $(pgrep -x rygel) | grep -q gmain; do
# sleep 1
#done
#sleep 1
#rygel_gmain=$(pstree -npt $(pgrep -x rygel) | grep gmain | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
#taskset -acp $m_task $(pgrep -x rygel)
#taskset -acp $m_task $rygel_gmain

 until [ $(pgrep -x minidlnad) -gt 0 ] 2>/dev/null; do
  sleep 1
 done
 sleep 1
 minidlna_sub=$(pstree -npt $(pgrep -x minidlnad) | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
 taskset -acp $m_task $(pgrep -x minidlnad)
 taskset -acp $m_task $minidlna_sub

 pkill rc.local
) &

#/dev/shm/nohup /dev/shm/rygel -c /dev/shm/rygel.conf>/dev/null</dev/null 2>/dev/null
#/dev/shm/nohup /dev/shm/minidlnad -f /dev/shm/minidlna.conf>/dev/null</dev/null 2>/dev/null

exit 0
