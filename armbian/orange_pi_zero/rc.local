#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

mpd_bg () {

 until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -np $(pgrep -x mpd) 2>/dev/null | grep -q output); do
  sleep 1
 done

 sleep 1

 pgr_mpd=$(pgrep -x mpd)

 taskset -pc $m_task $pgr_mpd
 #renice -1 -p       $pgr_mpd

 echo "$(pstree -np $pgr_mpd)" | while read line ; do
  proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $proc in
   mpd)		 taskset -cp $s_task $proc_nr ;;
   io)		 taskset -cp $s_task $proc_nr ;;
   player)	 taskset -cp $s_task $proc_nr ;;
   decoder)	 taskset -cp $s_task $proc_nr ;;
   output)	 taskset -cp $m_task $proc_nr 
		 renice -1 -p	     $proc_nr
		 chrt -op 0	     $proc_nr ;;
  esac
 done
 
 nohup taskset -ac $s_task /usr/bin/upmpdcli -c /etc/upmpdcli.conf &

 [ -e /usr/lib/arm-linux-gnueabihf/libasound.so.2 ] && mv /usr/lib/arm-linux-gnueabihf/libasound.so.2 /usr/lib/arm-linux-gnueabihf/libasound.so.2.sav

 echo none > /sys/class/leds/green_led/trigger
}

[ ! -e /usr/lib/arm-linux-gnueabihf/libasound.so.2 ] && [ -e /usr/lib/arm-linux-gnueabihf/libasound.so.2.sav ] && mv /usr/lib/arm-linux-gnueabihf/libasound.so.2.sav /usr/lib/arm-linux-gnueabihf/libasound.so.2

echo noop > /sys/block/mmcblk0/queue/scheduler
#ifconfig eth0 txqueuelen 1875

for i in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}'); do
 chrt -op 0 $i
done

for i in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 {print $1}'); do
 renice 0 $i
done

m_task=$(($(nproc --all)-1))
[ "$m_task" -ge 3 ] && s_task=$((m_task-2)) || s_task=0

if [ "$m_task" -ge 1 ];then
 for pid in $(ps -eo pid,comm | awk '$2 !~ /mpd/ && $2 !~ /systemd/ {print $1}'); do
  taskset -acp 0 $pid || true
 done
fi

### Remove services
for i in cron haveged ntp rsyslog haveged polkitd systemd-journald systemd-logind getty@tty1 serial-getty@ttyS0 dbus # systemd-udevd sshd
do
 service $i stop
done
#renice +1 -p $(pgrep -w sshd) $(pgrep -w dbus-daemon) $(pgrep -w dhcpd)
swapoff -a

### Init
taskset -cp $m_task 1

mpd_bg &
/usr/bin/mpd /etc/mpd.conf

exit 0
