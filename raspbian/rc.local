#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

echo noop > /sys/block/mmcblk0/queue/scheduler
ifconfig eth0 txqueuelen 10000

for pid in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}') ; do
 chrt -op 0 $pid
done

for pid in $(ps -eo pid,class,ni | grep -i TS | awk '$3 < 0 {print $1}') ; do
 renice 0 $pid
done

low_pri () {
 chrt -v -ip 0 $1
 renice  19 -p $1
#ionice -c3 -p $1
}

until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -np $(pgrep -x mpd) | grep -q output); do
 sleep 1
done

sleep 1

pgr_mpd=$(pgrep -x mpd)

if [ "$(nproc --all)" = "4" ]; then
 taskset -pc 0 $pgr_mpd
 renice   3 -p $pgr_mpd
 echo "$(pstree -np $pgr_mpd)" | while read line ; do
     proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $proc in
   mpd)		taskset -cp 0 $proc_nr
		chrt -v -ip 0 $proc_nr
		renice   7 -p $proc_nr ;;
   io)		taskset -cp 0 $proc_nr
		chrt -v -ip 0 $proc_nr
		renice   4 -p $proc_nr ;;
   player)	taskset -cp 1 $proc_nr
		renice   2 -p $proc_nr ;;
   decoder)	taskset -cp 2 $proc_nr
		renice   1 -p $proc_nr ;;
   output)	taskset -cp 3 $proc_nr
		chrt -v -op 0 $proc_nr ;;
  esac
 done
else
 renice   3 -p $pgr_mpd
 echo "$(pstree -np $pg_mpd)" | while read line ; do
     proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $proc in
   mpd)		chrt -v -ip 0 $proc_nr
		renice   7 -p $proc_nr ;;
   io)		chrt -v -ip 0 $proc_nr
		renice   4 -p $proc_nr ;;
   player)	chrt -v -ip 0 $proc_nr
		renice   2 -p $proc_nr ;;
   decoder)	chrt -v -ip 0 $proc_nr
		renice   1 -p $proc_nr ;;
   output)	chrt -v -op 0 $proc_nr ;;
  esac
 done
fi

#chrt i 0 taskset -ac 0 nice -n 19 polipo >/dev/null 2>&1 &

#chrt    -api 0 `pgrep upmpdcli`
#
### For Criterion USB DAC from Reference Club
#amixer -D control set 'XMOS Clock Selector',0 Capture 0 0 off off
#amixer -D control set 'XMOS Clock Selector',1 Capture 0 off
### For HiFiBerry DAC+ Pro
#amixer -D control set 'Analogue Playback Boost' 0     # +0.80 to 0.00dB
#amixer -D control set 'Auto Mute'               off
#amixer -D control set 'Auto Mute Mono'          off

 service systemd-journald stop
 service systemd-udevd stop
 service systemd-logind stop
 service triggerhappy stop
 service dbus stop
 service sshd stop
 service getty@tty1 stop

 taskset -cp 0 1
 low_pri       1

#chrt -aip 0     `pgrep -ox systemd`
#ionice -c 3 -p  `pgrep -ox systemd`
#renice -n 19 -p `pgrep -ox systemd`
#taskset -acp 0  `pgrep -ox systemd`

#
### Unmute IQaudIO I2S
#echo "22"  > /sys/class/gpio/export
#echo "out" > /sys/class/gpio/gpio22/direction
#echo "1"   > /sys/class/gpio/gpio22/value
### Digital Volume
#amixer set 'Digital',0 67% || /bin/true # 40@67% 60@81%
#
### Turn off USBs
 /home/pi/hub-ctrl -h 0 -P 5 -p 0
 /home/pi/hub-ctrl -h 0 -P 4 -p 0
 /home/pi/hub-ctrl -h 0 -P 3 -p 0
 /home/pi/hub-ctrl -h 0 -P 2 -p 0
### Turn off Monitor
 /opt/vc/bin/tvservice -o
### Turn off LEDs
echo none > /sys/class/leds/led0/trigger
echo 0    > /sys/class/leds/led0/brightness
echo 0    > /sys/class/leds/led1/brightness

/home/pi/llctl f0 l0 d0

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

exit 0
