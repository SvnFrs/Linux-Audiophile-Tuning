#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

[ ! -e /usr/lib/arm-linux-gnueabi/libasound.so.2 ] && [ -e /usr/lib/arm-linux-gnueabi/libasound.so.2.sav ] && mv /usr/lib/arm-linux-gnueabi/libasound.so.2.sav /usr/lib/arm-linux-gnueabi/libasound.so.2

/usr/bin/mpd --no-daemon /etc/mpd.conf &

#ifconfig eth0 txqueuelen 1875

for i in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}'); do
 chrt -op 0 $i
done

for i in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 {print $1}'); do
 renice 0 $i
done

until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -np $(pgrep -x mpd) | grep -q output); do
 sleep 1
done
sleep 1

m_task=$(($(nproc --all)-1))
[ "$m_task" -ge 3 ] && s_task=$((m_task-2)) || s_task=0
pgr_mpd=$(pgrep -x mpd)

if [ "$m_task" -ge 1 ];then
 for pid in $(ps -eo pid,comm | awk '$2 !~ /mpd/ && $2 !~ /systemd/ {print $1}'); do
  taskset -acp 0 $pid || true
 done
fi

taskset -cp $s_task $pgr_mpd
renice -1 -p $pgr_mpd

echo "$(pstree -np $pgr_mpd)" | while read line ; do
    proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
 proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
 case $proc in
   mpd)		 taskset -cp $s_task	$proc_nr ;;
   io)		 taskset -cp $s_task	$proc_nr ;;
   player)	 taskset -cp $m_task	$proc_nr ;;
   decoder)	 taskset -cp $m_task	$proc_nr ;;
   output)	 taskset -cp $m_task	$proc_nr
		 renice -2 -p	   	$proc_nr
		 chrt -op 0	   	$proc_nr ;;
 esac
done

taskset -ac $s_task /usr/local/bin/upmpdcli -c /usr/local/etc/upmpdcli.conf || true &

### For Criterion from Reference Club
#amixer -D control set 'XMOS Clock Selector',0 Capture 0 0 off off
#amixer -D control set 'XMOS Clock Selector',1 Capture 0 off

[ -e /usr/lib/arm-linux-gnueabi/libasound.so.2 ] && mv /usr/lib/arm-linux-gnueabi/libasound.so.2 /usr/lib/arm-linux-gnueabi/libasound.so.2.sav

### Remove services
#for i in dbus # sshd
#do
# service $i stop
#done
#renice +1 -p $(pgrep -w ssh) $(pgrep -w dbus) $(pgrep -w dh) $(pgrep -w rpc)
swapoff -a

### Init
taskset -cp $m_task 1

exit 0
