$ sudo cp /usr/share/alsa/alsa.conf.sav /dev/shm/alsa.conf
$ sudo ln -sf /dev/shm/alsa.conf /usr/share/alsa/alsa.conf
$ sudo cp /etc/mpd.conf.sav /dev/shm/mpd.conf && pkill mpd; sleep 1; mpd-bg
$ mpc listall | grep -m1 노력 | mpc add && mpc play $(mpc playlist | wc -l)

1. ALSA

	sudo sh -c "printf 'pcm.0.type hw pcm.0.card 0 pcm.0.device 0 pcm.0.subdevice 0' > /usr/share/alsa/alsa.conf.sav"

2. sudo nano /etc/mpd.conf.sav

	mixer_type "none"		# In/outside of ALSA output
	mixer_device "/dev/null"
	#tags "no"			# Remove the line
	audio_buffer_size "3683"
	buffer_before_play "10.55969372980212839891001004021011%"

3. sudo nano /etc/sysctl.conf
	kernel.sched_min_granularity_ns = 229980
	kernel.sched_wakeup_granularity_ns = 388286
	kernel.sched_latency_ns = 1394058
	kernel.sched_migration_cost_ns = 4899005
	kernel.sched_shares_window = 345995
	kernel.sched_time_avg = 6289

4. sudo mv /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.sav
   sudo mv /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0.sav

   sudo nano /etc/rc.local
	cp /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.sav /dev/shm/libaudiofile.so.1.0.0
	ln -sf /dev/shm/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1
	ln -sf /dev/shm/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so
	cp /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0.sav /dev/shm/libFLAC.so.8.3.0
	ln -sf /dev/shm/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.8
	ln -sf /dev/shm/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so

5. sudo nano /etc/rc.local

	musicpd_bg () {
	...upmpdcli...
	pkill rc.local
	}
	eol () {
	 until [ $(pgrep -x upmpdcli) -gt 0 ] 2>/dev/null; do
	  sleep 1
	 done
	 sleep 1
	 taskset -acp $s_task $(pgrep -x upmpdcli) || true
	 pkill startpar
	 sleep 1
	 pkill rc.local
	}
	musicpd_bg &
	eol &
	...mpd...

	nohup /dev/shm/upmpdcli -c /dev/shm/upmpdcli.conf&>/dev/null</dev/null
	nohup /dev/shm/mpd /dev/shm/mpd.conf&>/dev/null</dev/null

	m_task=$(($(nproc --all)-1)); h_task=0; s_task=0
	[ "$m_task" -ge 3 ] && h_task=$((m_task-1)) && s_task=$((m_task-2))
	...
	echo $(echo "2^$h_task" | bc) > /proc/irq/default_smp_affinity
