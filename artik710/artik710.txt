http://developer.artik.io/documentation/artik/getting-started/
http://developer.artik.io/downloads/artik710-sdfuse-a710-os-18-10-00-img/download   # Artik 710
http://developer.artik.io/downloads/artik710s-sdfuse-a710s-os-18-10-00-img/download # Artik 710s
http://developer.artik.io/documentation/developer-guide/update-image/updating-artik-image.html

0. QEMU

	$ sudo apt install binfmt-support qemu-user-static
	$ mkdir /home/parkmino/Downloads/artik710/rootfs
	$ sudo tar xf /home/parkmino/Downloads/artik710/img/rootfs.tar.gz -C /home/parkmino/Downloads/artik710/rootfs
	$ sudo cp /usr/bin/qemu-aarch64-static /home/parkmino/Downloads/artik710/rootfs/usr/bin

	$ sudo mount -ro bind /dev /home/parkmino/Downloads/artik710/rootfs/dev/
	$ sudo mount -ro bind /proc /home/parkmino/Downloads/artik710/rootfs/proc/
	$ sudo chmod 777 /home/parkmino/Downloads/artik710/rootfs/tmp

	$ sudo mount -o bind /dev /home/parkmino/Downloads/artik710/rootfs/dev/
	$ sudo mount -o bind /proc /home/parkmino/Downloads/artik710/rootfs/proc/
	$ sudo chmod 777 /home/parkmino/Downloads/artik710/rootfs/tmp

	$ sudo cp /etc/resolv.conf /home/parkmino/Downloads/artik710/rootfs/etc/.

	$ sudo systemctl start binfmt-support.service
	$ sudo chroot /home/parkmino/Downloads/artik710/rootfs

	### Build mpd, libasound, libaudiofile, libflac. mympd, librespot

	# exit

	$ sudo systemctl stop binfmt-support.service
	$ sudo umount -A /home/parkmino/Downloads/artik710/rootfs/dev
	$ sudo umount -A /home/parkmino/Downloads/artik710/rootfs/proc
	$ sudo rm /home/parkmino/Downloads/artik710/rootfs/etc/resolv.conf

1. Flashing

	$ sudo fdisk -l
	$ sudo umount /dev/sdc?
	$ sudo dd status=progress bs=4M if=/home/parkmino/Downloads/artik710/img/artik710_sdfuse-0710GC0F-44U-DJW0-20181030.003001.img of=/dev/sdc
	$ sync

	### SW402-4 ON  for the ARTIK 530/710 board
	### Boot from Micro SD Card
	### SW402-4 OFF for the ARTIK 530/710 board

2. Update

	$ ssh root@192.168.0.x
		password : root

	# uname -a; cat /etc/os-release
		Ubuntu 16.04.7 LTS (Linux artik 4.4.159-0710GC0F-44U-DJW0)
	# apt-get update
	# apt-get install bc file nano psmisc software-properties-common unzip
	# nano /etc/apt/sources.list
		...
		deb http://ports.ubuntu.com/ubuntu-ports/ xenial-backports main universe
		deb-src http://ports.ubuntu.com/ubuntu-ports/ xenial-backports main universe
	# mv /etc/apt/sources.list.d/artik-e2e-sources.list /etc/apt/sources.list.d/artik-e2e-sources.list.orig
	# mv /etc/apt/sources.list.d/artik-platform-artik710-sources.list /etc/apt/sources.list.d/artik-platform-artik710-sources.list.orig
	# apt-get update
		http://repo.artik.cloud/artik/bin/pub/artik-platform/ubuntu/artik710 (X)
	# apt-get -t xenial-backports upgrade
	# apt-get dist-upgrade
	# apt-get autoremove
	##apt-get install update-manager-core
	##do-release-upgrade

	# mkdir /root/copy
	$ scp copy/* root@192.168.0.x:/root/copy/

3. Localisation

	# dpkg-reconfigure locales
	# dpkg-reconfigure tzdata

	# locale
	# locale -a
	# locale -a -v
	# ls -al /var/lib/locales/supported.d/
	# nano /var/lib/locales/supported.d/en
		en_US UTF-8
	# rm -rfv /usr/lib/locale/*
	# locale-gen
	# locale -a -v

4. Network

	# nano /etc/network/interfaces

		auto eth0
		iface eth0 inet dhcp
		auto lo
		iface lo inet loopback

	# rm /etc/resolv.conf
	# nano /etc/resolv.conf

		nameserver 8.8.8.8
	
	# systemctl disable connman

	# nano -L /etc/avahi/avahi-daemon.conf
		host-name=bann
		domain-name=local
	# systemctl restart avahi-daemon

	##connmanctl services
	##connmanctl config $eth --ipv4 manual 192.168.0.x 255.255.255.0 192.168.0.1
	##connmanctl config $eth --ipv4 dhcp

	##wpa_cli -iwlan0 scan && wpa_cli scan_results
	##wpa_passphrase MyAP abcd1234 >> /etc/wpa_supplicant/wpa_supplicant.conf
	##systemctl restart wpa_supplicant
	##dhclient wlan0

	##nano /etc/wpa_supplicant/wpa_supplicant.conf
		#psk
		key_mgmt=NONE
		auth_alg=OPEN

	##echo '[Unit]
	Description=Run dhcp service for wifi interface
	After=wpa_supplicant.service
	Requires=wpa_supplicant.service
	[Service]
	ExecStart=/sbin/dhclient wlan0
	StandardOutput=syslog
	StandardError=syslog
	[Install]
	WantedBy=multi-user.target' > /etc/systemd/system/wlan_dhcp.service

	##systemctl enable wlan_dhcp
	##systemctl start  wlan_dhcp

	##hostname -f
	##nano /etc/hostname
	##nano /etc/hosts
	##hostname $(cat /etc/hostname)
	##/etc/resolvconf/resolv.conf.d/head
		domain your.domain.name
	##resolvconf -u
	##hostnamectl

	# ls /etc/update-motd.d/*

5. Disable modules

	# lsmod
	# nano /etc/modprobe.d/artik710.conf
		 blacklist aes_neon_blk
		#blacklist 8021q
		#blacklist iptable_nat
		#blasklist tun
		 blacklist crc32_arm64
		 blacklist aes_ce_blk
		 blacklist ghash_ce
		 blacklist sha2_ce
		 blacklist sha1_ce
		 blacklist mali
		#blacilist dhd

	# nano /etc/rc.local
		rmmod 8021q aes_ce_cipher cfg80211 iptable_nat nf_nat_ipv4 nf_nat tun dhd

6. Disable services

	# systemctl list-unit-files -t service | awk '$2~/enabled/'
	# apt-get remove zigbeed
	# apt-get autoremove
	# systemctl stop ble-onboarding-launcher bluetooth dnsmasq mosquitto pulseaudio wpa_supplicant getty@tty1 systemd-resolved resolvconf rpcbind # serial-getty@ttySAC3 avahi-daemon
	# systemctl disable avahi-daemon audiosetting ble-onboarding-launcher bluetooth dnsmasq mosquitto pulseaudio wpa_supplicant getty@tty1 systemd-resolved rpcbind # serial-getty@ttySAC3 avahi-daemon
	# systemctl mask systemd-journald.service systemd-journald.socket systemd-journald-audit.service systemd-journald-audit.socket systemd-journald-dev-log.socket systemd-journal-flush
	# systemctl mask systemd-logind wpa_supplicant
	# pkill hciattach; pkill tzdaemon; system

7. MPD

	# apt-get install libcue1 libaudiofile1 libavformat-ffmpeg56 libflac8 libid3tag0 libmpdclient2 libupnp6
	# mkdir -p /var/lib/mpd/music /var/lib/mpd/playlists /run/mpd
	##systemctl stop mpd
	##systemctl disable mpd.service
	##systemctl mask    mpd.socket
	##mv /usr/bin/mpd  /usr/bin/mpd.org
	##mv /etc/mpd.conf /etc/mpd.conf.orig
	# mv copy/mpd /usr/bin/
	# mv copy/mpd.conf /etc/mpd.conf.sav
	# mpd /etc/mpd.conf.sav
		Ctrl+C

	# apt-get install mpc ncmpc
	# mkdir /etc/ncmpc
	# mv copy/ncmpc_config /etc/ncmpc/config
	# mv /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo.orig
	# mv copy/ncmpc.mo /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo
	

8. Internet Radio & TTS

	# apt-get update
	# apt-get install python-crypto
	# curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
	# chmod 755 /usr/local/bin/youtube-dl
	# mv copy/{kr2mpd,sbs_dec.py,ut2mpd,tts2mpd} /usr/bin/
	# mv copy/internet\ radio.m3u /var/lib/mpd/playlists/
	# mkdir /var/lib/mpd/music/webradio
	# mv copy/*.pls /var/lib/mpd/music/webradio

9. Upmpdcli

	##add-apt-repository ppa:jean-francois-dockes/upnpp1
	##apt-get update
	##apt-get install upmpdcli
	# wget https://launchpad.net/~jean-francois-dockes/+archive/ubuntu/upnpp1/+files/libnpupnp1_2.1.2-1~ppa3~xenial1_arm64.deb
	# wget https://launchpad.net/~jean-francois-dockes/+archive/ubuntu/upnpp1/+files/libupnpp6_0.18.0-2~ppa1~xenial1_arm64.deb
	# wget https://launchpad.net/~jean-francois-dockes/+archive/ubuntu/upnpp1/+files/upmpdcli_1.4.7-1~ppa1~xenial1_arm64.deb
	# wget https://launchpad.net/~jean-francois-dockes/+archive/ubuntu/upnpp1/+files/upmpdcli-tidal_1.4.7-1~ppa1~xenial1_all.deb

	# apt-get install libmpdclient2 libexpat1 libcurl3 libmicrohttpd10 libjsoncpp1 python3 python3-requests
	# dpkg -i copy/lib*upnp*.deb copy/upmpdcli*.deb
	# mv copy/icon.png /usr/share/upmpdcli/
	# sed -i '/checkcontentformat =/s/^#//; /checkcontentformat =/s/= .*/= 0/' /etc/upmpdcli.conf
	# sed -i '/friendlyname =/s/^#//; /friendlyname =/s/= .*/= Bann Sylphid Network Player/' /etc/upmpdcli.conf
	# sed -i '/radiolist/s/^/#/' /etc/upmpdcli.conf
	# sed -i '/tidalquality =/s/^#//; /tidalquality =/s/= .*/= lossless/' /etc/upmpdcli.conf
	# grep -e checkcontentformat -e friendlyname -e tidalquality /etc/upmpdcli.conf -e radiolist
		checkcontentformat = 0
		friendlyname = Bann Sylphid Network Player
		#radiolist = /usr/share/upmpdcli/radio_scripts/radiolist.conf
		tidalquality = lossless
	# nano /etc/upmpdcli.conf
		[radio ...]
		...
	# systemctl restart upmpdcli
	# systemctl disable upmpdcli

10. Roon Bridge

	# curl -O http://download.roonlabs.com/builds/roonbridge-installer-linuxarmv8.sh
	# chmod +x roonbridge-installer-linuxarmv8.sh
	# ./roonbridge-installer-linuxarmv8.sh

	# nano /etc/systemd/system/roonbridge.service
		ExecStart=/opt/RoonBridge/Bridge/RoonBridge
	# nano /opt/RoonBridge/Bridge/RoonBridge
		#exec /bin/bash -c "exec -a $SCRIPT \"$MONO_DIR/bin/mono-sgen\" --debug --gc=sgen --server $SCRIPT.exe $@">/dev/null</dev/null 2>/dev/null
		 exec /bin/bash -c "exec -a $SCRIPT \"$MONO_DIR/bin/mono-sgen\" --gc=sgen --server $SCRIPT.exe $@">/dev/null</dev/null 2>/dev/null
		#exec "$MONO_DIR/bin/mono-sgen" --debug --gc=sgen --server $SCRIPT.exe "$@">/dev/null</dev/null 2>/dev/null
		 exec "$MONO_DIR/bin/mono-sgen" --gc=sgen --server $SCRIPT.exe "$@">/dev/null</dev/null 2>/dev/null
		 fi
	# cp /etc/systemd/system/roonbridge.service /etc/systemd/system/roonbridgetoram.service
	# sed -i 's/\/opt\//\/dev\/shm\//' /etc/systemd/system/roonbridgetoram.service
	# systemctl daemon-reload
	# systemctl disable roonbridge roonbridgetoram

	# ls -al /opt/RoonBridge/Bridge/processreaper
	# strip --strip-debug /opt/RoonBridge/Bridge/processreaper
	# ls -al /opt/RoonBridge/Bridge/processreaper

	# find /opt/RoonBridge/ -name *.so -exec ls -al {} \;
	# find /opt/RoonBridge/ -name *.so -exec chmod -x {} \; -exec strip --strip-debug {} \;
	# find /opt/RoonBridge/ -name *.so -exec ls -al {} \;

	# rm roonbridge-installer*

11. AirUPnP / Librespot / ttyd

	# mv copy/airupnp* copy/librespot /root/
	# mv copy/ttyd /usr/bin/

12. HQPlayer NAA

	# wget --no-check-certificate https://www.signalyst.eu/bins/naa/linux/xenial/networkaudiod_3.5.5-39_arm64.deb
	##wget --no-check-certificate https://www.signalyst.eu/bins/naa/linux/stretch/networkaudiod_3.6.0-42_arm64.deb
	# dpkg -i networkaudiod*.deb
	# sed -i '/alsa=/s/=.*/=mix/' /etc/default/audio.conf

13. Squeezelite

	# mv copy/squeezelite /root/
	##apt-get install squeezelite
	##sed -i '/SL_SOUNDCARD/s/^#*//; /SL_SOUNDCARD/s/".*"/"pcm.hw"/' /etc/default/squeezelite

14. uhubctl

	# dpkg -i copy/uhubctl_2.2.0-1_arm64.deb
	# uhubctl

15. myMPD

	# apt-get install gcc cmake perl libssl-dev libid3tag0-dev libflac-dev # liblua5.3-dev
	# cd /root
	# curl -s https://github.com/jcorporation/myMPD/releases/latest | cut -d\" -f2 | sed 's/releases\/tag/archive/; s/$/.tar.gz/' | wget --no-check-certificate "$(cat -)" -O ./mympd.tar.gz
	# tar xvzf mympd.tar.gz && rm mympd.tar.gz
	# cd myMPD*

	##sed -i '/play_circle_outline/s/myMPD/Sylphid/; s/Initializing myMPD/Initializing Sylphid/' htdocs/index.html
	##sed -i '/data-phrase="Settings"/a\          <a data-phrase="Web interface" class="dropdown-item text-light" href="http://bann.local:8080" target="_blank"></a>' htdocs/index.html
	##grep -n -e Sylphi -e bann htdocs/index.html
	32	      <span class="material-icons splashScreenIcon">play_circle_outline</span> Sylphid
	34	    <div id="splashScreenAlert" data-phrase="Initializing Sylphid"></div>
	41	          <span class="material-icons header-logo">play_circle_outline</span>Sylphid
	53	          <a data-phrase="Web interface" class="dropdown-item text-light" href="http://bann.local:8080" target="_blank"></a>
	##printf '\nInitializing Sylphid\nSylphid 초기화\n\nWeb interface\n웹 인터페이스\n' >> src/i18n/ko-KR.txt
	##tail src/i18n/ko-KR.txt
		...
		Initializing Sylphid
		Sylphid 초기화
		
		Web interface
		웹 인터페이스

	# sed -i 's/스트림 추가/스트리밍 서비스 추가/; s/스트림/스트리밍/' src/i18n/ko-KR.txt   # <= 6.3.0
	# grep 스트리밍 src/i18n/ko-KR.txt   # <= 6.3.0

	# apt-get install build-essential fakeroot
	# apt-get install -t xenial-backports debhelper
	##sed -i '120,123d' CMakeLists.txt	# < 6.2.0
	# ./build.sh pkgdebian
	# ls -al package/mympd*.deb

	# apt-get install libc6 libid3tag0 libflac8 lrzsz openssl liblua5.3-0 # libmediainfo0v5
	# dpkg -i copy/mympd*.deb
	# ls -al /usr/bin/mympd
	# file /usr/bin/mympd
	##strip --strip-debug /usr/bin/mympd
	##ls -al /usr/bin/mympd

	##cp mympd /usr/bin/
	##cp mympd.conf /etc/
	##cp mympd.service /lib/systemd/system/
	##mkdir /var/lib/mympd
	##getent group  mympd > /dev/null || groupadd -r mympd
	##getent passwd mympd > /dev/null || useradd -r -g mympd -s /bin/false -d /var/lib/mympd mympd

	# nano /etc/mympd.conf
		 host = 127.0.0.1
		 port = 6600
		 musicdirectory = /var/lib/mpd/music
		 playlistdirectory = /var/lib/mpd/playlists
		#ssl = false
		#sslport = 443
		 publish = true
		#webdav = false
		 loglevel = 1
		#user = mympd
		#sticker = false
		#mixramp = false
		 syscmds = true
		 mounts = false
		[syscmds]
		KBS 클래식 FM = kr2mpd 1fm
		KBS 쿨 FM     = kr2mpd 2fm
		MBC FM        = kr2mpd mbcm
		MBC FM4U      = kr2mpd mbc4u
		SBS 파워 FM   = kr2mpd sbsp
		SBS 러브 FM   = kr2mpd sbsl
		HR =
		다시 시작 - Reboot    = sudo reboot
		전원 끄기 - Power off = sudo poweroff
		HR =
		MPD DoP(DSD over PCM) 켜기 = consf mpd dsd on
		MPD DoP(DSD over PCM) 끄기 = consf mpd dsd off
		HR =
		룬 브리지 켜기 = consf roon on
		룬 브리지 끄기 = consf roon off
		HR =
		스퀴즈박스 켜기 = consf sqzlite on
		스퀴즈박스 끄기 = consf sqzlite off
		HR=
		UPnP/DLNA 켜기 = consf upnp on
		UPnP/DLNA 끄기 = consf upnp off
		HR =
		웹 설정 - Web Settings   = ttyd -o -O -p 8080 bash audio-config&>/dev/null</dev/null 2>/dev/null
		웹 터미널 - Web Terminal = ttyd -o -O -p 8080 bash -c "sudo su"&>/dev/null</dev/null 2>/dev/null
	# echo 'mympd ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
	# cp /lib/systemd/system/mympd.service /etc/systemd/system/mympd.service
	# nano /etc/systemd/system/mympd.service
		#Requires=network.target local-fs.target mpd.service
		#After=mpd.service
		#Protect
		#Restrict
	# systemctl disable mympd
	# systemctl daemon-reload
	# systemctl status mympd
	# mympd
		설정 > 외관 > 알림 > 페이지에 알림
	##mympd reset_state

16. Tweak ALSA

	# ls -al /usr/lib/aarch64-linux-gnu/libasound*
	# mv /usr/lib/aarch64-linux-gnu/libasound.so.2.0.0 /etc/libasound.so.2.0.0.orig
	# mv copy/libasound.so.2.0.0.*  /etc/
	# rm -i /usr/lib/aarch64-linux-gnu/libasound.so*

	# cp /etc/libasound.so.2.0.0.min /dev/shm/libasound.so.2

	# mv /usr/share/alsa /usr/share/alsa.orig
	# systemctl mask alsa-store.service
	# systemctl mask alsa-restore.service
	# nano /lib/modprobe.d/aliases.conf
		#options snd-usb-audio index=-2
	# mkdir /usr/share/alsa
	# cp /usr/share/alsa.orig/alsa.conf /usr/share/alsa/alsa.conf.orig
	# mv copy/alsa.conf.{min,mix,plug} /usr/share/alsa/
	##sed -i 's/card 0/card 1/' /usr/share/alsa/alsa.conf.{min,mix,plug}

17. Tweak decoder libraries

	# ls -al /usr/lib/aarch64-linux-gnu/lib{audiofile,FLAC.so}*
	# mv /usr/lib/aarch64-linux-gnu/libaudiofile.so.1.0.0 /etc/libaudiofile.so.1.0.0.orig
	# mv /usr/lib/aarch64-linux-gnu/libFLAC.so.8.3.0 /etc/libFLAC.so.8.3.0.orig
	# echo "/etc/libaudiofile.so.1.0.0.sav /dev/shm/libaudiofile.so.1" | xargs -n 1 cp -v copy/libaudiofile.so.1.0.0
	# echo "/etc/libFLAC.so.8.3.0.sav /dev/shm/libFLAC.so.8" | xargs -n 1 cp -v copy/libFLAC.so.8.3.0
	# rm -i /usr/lib/aarch64-linux-gnu/lib{audiofile.so*,FLAC.so*}
	# rm copy/{libaudiofile.so.1.0.0,libFLAC.so.8.3.0}

	# ls -al /dev/shm/
	# nano /etc/ld.so.conf.d/dev_shm.conf
		/dev/shm/
	# ldconfig
	# ls -al /usr/lib/aarch64-linux-gnu/lib{asound.so*,audiofile.so*,FLAC.so*}

18. Edit /etc/rc.local

	# nano /etc/rc.local
		uhubctl -a 0 -p 1,3 (?)

19. Edit /etc/sysctl.conf

	# nano /etc/sysctl.conf
	# sysctl -p /etc/sysctl.conf

20. audio-config

	# mv copy/{audio-config,audioconf,consf} /usr/bin/
	# mv copy/audio.conf /etc/default/
	# audio-config
	# audioconf

21. USB mount # MicroSD

	# apt-get install exfat-fuse exfat-utils # microSDXC
	# mkdir /mnt/usb # /mnt/microSD
	##ln -sf /mnt/usb /var/lib/mpd/music # /mnt/microSD
	# nano /etc/fstab
		#/dev/mmcblk1p1 /mnt/microSD auto defaults,nofail,x-systemd.automount,x-systemd.device-timeout=1,ro 0 2
		#/dev/sda1 /mnt/usb auto defaults,nofail,x-systemd.automount,x-systemd.device-timeout=1,ro 0 2
		#//192.168.0.x/Music /mnt/cifs cifs    guest,ro,iocharset=utf8 0 0
		#//192.168.0.x/Music /mnt/cifs cifs    username=user,password=pass,ro,iocharset=utf8 0 0

22. Etc

	# systemctl disable sshd
	# sed -i '/^serial/s/on/off/' /etc/default/audio.conf
	# rm /usr/bin/airupnp* /usr/bin/librespot*

23. Back up

	https://davidgs.com/2017/how-to-save-your-artik-520-backup/
	https://github.com/davidgs/ARTIK-5-backup

	# apt-get update
	# apt-get upgrade
	# apt-get dist-upgrade
	# mv copy/backup.sh /usr/bin/
	##apt-get install pv
	# systemctl disable sshd
	# systemctl daemon-reload
	# youtube-dl --update
	# echo "* Bann Sylphid Network Player $(date +"%y.%m")" > ~/release
	# mpc clear
	# rm -rf /var/roon/* /var/lib/mympd/covercache/*
	# cat /lib/systemd/system/sshd.service
	# rm /etc/systemd/system/*/sshd.service
	# rm -f /root/.bash_history ~/.bash_history ; history -c
	# backup.sh

cf)

### U-boot
#printenv
#printenv bootdelay mmcboot opts
#setenv opts ${opts} initcall_blacklist=nexell-spdif-transceiver_init_module
#saveenv
# cat /proc/cmdline

https://oinkzwurgl.org/hacking/bash_cgi/
http://www.team2053.org/docs/bashcgi/postdata.html
https://marc.waeckerlin.org/computer/blog/parsing_of_query_string_in_bash_cgi_scripts

$ echo "obase=16; $(echo "ibase=2; 10000000" | bc)" | bc # 80 Main
$ echo "obase=16; $(echo "ibase=2; 00100000" | bc)" | bc # 20 Second
$ echo "obase=16; $(echo "ibase=2; 01000000" | bc)" | bc # 40 High
$ echo "obase=16; $(echo "ibase=2; 00010000" | bc)" | bc # 10 Other
$ echo "obase=16; $(echo "ibase=2; 11110000" | bc)" | bc # F0
$ echo "obase=16; $(echo "ibase=2; 00001111" | bc)" | bc #  F
$ printf '%x\n' 128 64 32 $((8+4+2+1))
$ echo "obase=16; 128; 64; 32; $((8+4+2+1))" | bc

LED
https://developer.artik.io/documentation/artik/tutorials/blink-an-led.html
– Red  LED : sysfs GPIO 28 on ARTIK 530/710 (LED400)
– Blue LED : sysfs GPIO 38 on ARTIK 530/710 (LED401)
# echo 38 > /sys/class/gpio/export
# ls ls /sys/class/gpio
# echo out > /sys/class/gpio/gpio38/direction
# echo 1 > /sys/class/gpio/gpio38/value
