#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

musicpd_bg () {

 until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -np $(pgrep -x mpd) 2>/dev/null | grep -q output); do
  sleep 1
 done

 sleep 1

 echo "$(pstree -np $pgr_mpd)" | while read line ; do
  proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $proc in
   output) chrt -op 0 $proc_nr ;;
  esac
 done

/run/shm/nohup /run/shm/upmpdcli -c /run/shm/upmpdcli.conf>/dev/null</dev/null 2>/dev/null

}

eol () {

# turn on LED

if [ -d /sys/class/leds/status:green:health ]; then
   echo default-on > /sys/class/leds/status:green:health/trigger
   if [ -d /sys/class/leds/status:orange:fault ]; then
      echo none > /sys/class/leds/status:orange:fault/trigger
   fi
   if [ -d /sys/class/leds/status:blue:health ]; then
      echo none > /sys/class/leds/status:blue:health/trigger
   fi
fi
if [ -d /sys/class/leds/dockstar:green:health ]; then
   echo default-on > /sys/class/leds/dockstar:green:health/trigger
   echo none > /sys/class/leds/dockstar:orange:misc/trigger
fi

if [ -d /sys/class/leds/plug:green:health ]; then
   echo default-on > /sys/class/leds/plug:green:health/trigger
   if [ -d /sys/class/leds/plug:red:misc ]; then
      echo none  > /sys/class/leds/plug:red:misc/trigger
   fi
fi

if [ -d /sys/class/leds/power:blue ]; then
   echo default-on  > /sys/class/leds/power:blue/trigger
   ### echo default-on  > /sys/class/leds/otb:blue/trigger
   echo none        > /sys/class/leds/power:red/trigger
fi

if [ -d /sys/class/leds/usb1:blue ]; then
   echo usb-host > /sys/class/leds/usb1\:blue/trigger
fi
if [ -d /sys/class/leds/usb2:blue ]; then
   echo usb-host > /sys/class/leds/usb2\:blue/trigger
fi
if [ -d /sys/class/leds/usb3:blue ]; then
   echo usb-host > /sys/class/leds/usb3\:blue/trigger
fi
if [ -d /sys/class/leds/usb4:blue ]; then
   echo usb-host > /sys/class/leds/usb4\:blue/trigger
fi

if [ -d /sys/class/leds/nsa325:green:sys ]; then
   echo default-on  > /sys/class/leds/nsa325:green:sys/trigger
   echo none        > /sys/class/leds/nsa325:orange:sys/trigger
fi

if [ -d /sys/class/leds/nsa325:green:sata1 ]; then
   echo ide-disk1  > /sys/class/leds/nsa325:green:sata1/trigger
fi

if [ -d /sys/class/leds/nsa325:green:sata2 ]; then
   echo ide-disk2  > /sys/class/leds/nsa325:green:sata2/trigger
fi

if [ -d /sys/class/leds/nsa325:green:usb ]; then
   echo usb-host > /sys/class/leds/nsa325\:green\:usb/trigger
fi

until [ $(pgrep -x upmpdcli) -gt 0 ] 2>/dev/null; do
 sleep 1
done

### AirConnect
if [ "$airplay" = on ]; then
 cp /usr/bin/airupnp-arm5 /run/shm/
 /run/shm/nohup /run/shm/airupnp-arm5 -l 1000:2000 -Z -z>/dev/null</dev/null 2>/dev/null
fi

sleep 1
pkill startpar || true
sleep 1
pkill rc.local || true

}

[ -r /etc/default/audio.conf ] && . /etc/default/audio.conf

mount -o remount,exec /run/shm

if [ "$alsa" = orig ]; then
 cp /usr/lib/arm-linux-gnueabi/libasound.so.2.0.0.orig /run/shm/libasound.so.2.0.0
 cp /usr/share/alsa/alsa.conf.plug /run/shm/alsa.conf
elif [ "$alsa" = min ]; then
 cp /usr/lib/arm-linux-gnueabi/libasound.so.2.0.0.min /run/shm/libasound.so.2.0.0
 cp /usr/share/alsa/alsa.conf.min /run/shm/alsa.conf
 rm -rf /dev/snd/*c /dev/snd/by* || true
 rm /dev/snd/hw* /dev/snd/seq /dev/snd/timer || true
else
 cp /usr/lib/arm-linux-gnueabi/libasound.so.2.0.0.mix /run/shm/libasound.so.2.0.0
 cp /usr/share/alsa/alsa.conf.mix /dev/shm/alsa.conf
#rm /dev/snd/hw* /dev/snd/seq /dev/snd/timer || true
fi

ln -sf /run/shm/libasound.so.2.0.0 /usr/lib/arm-linux-gnueabi/libasound.so.2.0.0
ln -sf /run/shm/libasound.so.2.0.0 /usr/lib/arm-linux-gnueabi/libasound.so.2
ln -sf /run/shm/libasound.so.2.0.0 /usr/lib/arm-linux-gnueabi/libasound.so
ln -sf /run/shm/alsa.conf /usr/share/alsa/alsa.conf
cp /usr/bin/nohup /usr/local/bin/mpd /usr/local/bin/upmpdcli /usr/local/etc/upmpdcli.conf /usr/bin/mympd /usr/etc/mympd.conf /run/shm/
cp /etc/mpd.conf.sav /run/shm/mpd.conf
cp /usr/lib/arm-linux-gnueabi/libaudiofile.so.1.0.0.sav /run/shm/libaudiofile.so.1.0.0
ln -sf /run/shm/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabi/libaudiofile.so.1.0.0
ln -sf /run/shm/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabi/libaudiofile.so.1
ln -sf /run/shm/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabi/libaudiofile.so
cp /usr/lib/arm-linux-gnueabi/libFLAC.so.8.3.0.sav /run/shm/libFLAC.so.8.3.0
ln -sf /run/shm/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabi/libFLAC.so.8.3.0
ln -sf /run/shm/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabi/libFLAC.so.8
ln -sf /run/shm/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabi/libFLAC.so

for i in $(ls /sys/block/*/queue/scheduler); do
 if   echo $(cat $i) | grep -q none; then
  echo none > $i
 elif echo $(cat $i) | grep -q noop; then
  echo noop > $i
 fi
done

if [ "$tfc" = on ]; then
 echo "$(ifconfig -a | grep -o ^[a-z0-9]* | grep -v lo)" | while read dev ; do
  tc qdisc add dev $dev root pfifo_fast
  tc qdisc add dev $dev ingress
 #tc -s -d qdisc show dev $dev
 done
fi

for i in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 {print $1}'); do
 renice -2 $i
done

for i in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}'); do
 chrt -op 0 $i
 renice  -3 $i
done

### Remove services
#for i in dbus # sshd
#do
# service $i stop
#done

swapoff -a

[ "$dbus" = off ] && service dbus stop || true
[ "$mympd" = on ] && /run/shm/mympd /run/shm/mympd.conf&</dev/null 2>/dev/null
[ "$ssh" = off ] && service sshd stop || true
[ "$usb" = on ] || uhubctl -a 0 -p "$usb"

### NFS
if [ "$nfs" = off ]; then
 for i in rpcbind rpc.statd rpc.idmapd; do
  pkill $i || true
 done
fi

if [ "$upnp" = on ]; then
 musicpd_bg &
 eol &
/run/shm/nohup /run/shm/mpd /run/shm/mpd.conf>/dev/null</dev/null 2>/dev/null
else
 pkill rc.local
fi

exit 0
