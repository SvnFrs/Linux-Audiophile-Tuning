The latest U-Boot Bootloader
U-Boot 2017.07-tld-1
http://forum.doozan.com/read.php?3,12381

Linux Kernel 4.10.0 Kirkwood package and Debian rootfs
http://forum.doozan.com/read.php?2,12096
Debian 4.4.0 kirkwood rootfs
Debian-4.4.0-kirkwood-tld-1-rootfs-bodhi.tar.bz2

0. QEMU

	$ sudo apt install qemu-user-static
	$ mkdir /home/parkmino/Downloads/pogoplug/rootfs
	$ sudo tar -xjf /home/parkmino/Downloads/pogoplug/Debian-4.4.0-kirkwood-tld-1-rootfs-bodhi.tar.bz2 -C /home/parkmino/Downloads/pogoplug/rootfs
	$ sudo cp /usr/bin/qemu-arm-static /home/parkmino/Downloads/pogoplug/rootfs/usr/bin

	$ sudo mount -ro bind /dev /home/parkmino/Downloads/pogoplug/rootfs/dev/
	$ sudo mount -ro bind /proc /home/parkmino/Downloads/pogoplug/rootfs/proc/
	$ sudo chmod 777 /home/parkmino/Downloads/pogoplug/rootfs/tmp

	$#sudo mount -o bind /dev /home/parkmino/Downloads/pogoplug/rootfs/dev/
	$#sudo mount -o bind /proc /home/parkmino/Downloads/pogoplug/rootfs/proc/
	$#sudo chmod 777 /home/parkmino/Downloads/pogoplug/rootfs/tmp

	$ sudo cp /etc/resolv.conf /home/parkmino/Downloads/pogoplug/rootfs/etc/.

	$ sudo chroot /home/parkmino/Downloads/pogoplug/rootfs

	### Build mpd, libasound, libaudiofile, libflac. mympd, librespot

	# exit

	$ sudo umount -A /home/parkmino/Downloads/pogoplug/rootfs/dev
	$ sudo umount -A /home/parkmino/Downloads/pogoplug/rootfs/proc
	$ sudo rm /home/parkmino/Downloads/pogoplug/rootfs/etc/resolv.conf

1. USB Install

	$ sudo gparted (a single ext2 partition with 'rootfs' label)
	$ sudo apt-get install u-boot-tools
	$ sudo su
	# fdisk -l
	# cd /media/parkmino/rootfs

	# ls -al
	##rm -rf *
	# sync
	# ls -al

	# tar -xjf '/home/parkmino/Downloads/pogoplug/Debian-4.4.0-kirkwood-tld-1-rootfs-bodhi.tar.bz2'
	# sync
	# cat /media/parkmino/rootfs/etc/fstab
		/dev/root / ext2  noatime,errors=remount-ro 0 1
		tmpfs     /tmp tmpfs defaults,noatime       0 0

	# cd boot
	# cp -a zImage-4.4.0-kirkwood-tld-1 zImage.fdt
	# cat dts/kirkwood-pogo_e02.dtb >> zImage.fdt
	# mv uImage uImage.orig
	# mkimage -A arm -O linux -T kernel -C none -a 0x00008000 -e 0x00008000 -n Linux-4.4.0-kirkwood-tld-1 -d zImage.fdt uImage
	# sync

	# cp -a zImage-4.4.0-kirkwood-tld-1 zImage.fdt
	# cat dts/kirkwood-pogoplug_v4.dtb >> zImage.fdt
	# mkimage -A arm -O linux -T kernel -C none -a 0x00008000 -e 0x00008000 -n Linux-4.4.0-kirkwood-tld-1 -d zImage.fdt uImage.v4
	# sync

	# exit

2. Update

	$ ip=192.168.0.37
	$ ssh root@$ip (password: root)
	# rm /etc/ssh/ssh_host*
	# ssh-keygen -A
	# exit
	$ ssh root@$ip (password: root)

	# apt-get update
	# apt-get install debian-archive-keyring
	# apt-get update

	##apt-get upgrade	# CAUTION : It may not reboot for some reason !
	  ...
	  update-initramfs: Generating /boot/initrd.img-4.4.0-kirkwood-tld-1
	##cd /boot
	##mkimage -A arm -O linux -T ramdisk -C gzip -a 0x00000000 -e 0x00000000 -n initramfs-4.4.0-kirkwood-tld-1 -d initrd.img-4.4.0-kirkwood-tld-1 uInitrd
	##apt-get dist-upgrade

	# apt-get autoremove
	# apt-get clean
	# dpkg-reconfigure tzdata
	# apt-get install locales
	# dpkg-reconfigure locales	# en_US.UTF-8 ko_KR.UTF-8
	# locale
	# locale -a
	# locale -a -v
	##rm -rfv /usr/lib/locale/*
	# locale-gen
	# nano /etc/default/locale
		LANG=en_US.UTF-8
		LANGUAGE=en_US.UTF-8
		LC_ALL=en_US.UTF-8

	# apt-get install bc ca-certificates cifs-utils curl file ntpdate psmisc sudo
	# apt-get install exfat-fuse exfat-utils
	# apt-get install python-crypto whiptail

	# mkdir ~/copy

	$ ip=192.168.0.37
	$ scp /home/parkmino/Downloads/pogoplug/copy/* root@$ip:/root/copy/

	# cat /etc/hostname
	# nano /etc/hosts
		127.0.1.1	debian

3. Remove moduels & Services

	# lsmod
	# nano /etc/modprobe.d/marvellcrypto-blacklist.conf
		blacklist marvell_cesa
	# nano /etc/inittab
		#T0:2345:respawn:/sbin/getty -L ttyS0 115200 linux
	# apt-get install sysv-rc-conf
	# sysv-rc-conf
		Diable #alsa-utils(S) avahi-daemon(2-3-4-5) busybox-klogd(2-3-4-5) busybox-syslogd(2-3-4-5) mpd(2-3-4-5)

4. MPD

	# apt-get install libcue1 libaudiofile1 libavformat56 libflac8 libid3tag0 libmpdclient2 libupnp6 libcurl3-gnutls
	# mkdir -p /var/lib/mpd/music /var/lib/mpd/playlists /var/run/mpd
	# mv copy/mpd /usr/bin/
	# mv copy/mpd.conf /etc/mpd.conf.sav
	##mpd /etc/mpd.conf.sav
	  Ctrl+C

	# apt-get install mpc ncmpc
	# mkdir /etc/ncmpc
	# mv copy/ncmpc_config /etc/ncmpc/config
	# mv /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo.orig
	# mv copy/ncmpc.mo /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo

5. Internet Radio & TTS (Text to Speech)

	# curl -k -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
	# chmod 755 /usr/local/bin/youtube-dl
	# mv copy/{kr2mpd,sbs_dec.py,ut2mpd,tts2mpd} /usr/bin/
	# sed -i 's/Cryptodome/Crypto/g' /usr/bin/sbs_dec.py
	# mv copy/internet\ radio.m3u /var/lib/mpd/playlists/
	# mkdir /var/lib/mpd/music/webradio
	# mv copy/*.pls /var/lib/mpd/music/webradio
	##mpc update

6. Upmpdcli Build

	https://www.lesbonscomptes.com/upmpdcli/upmpdcli-debian-build.txt

	# apt-get update
	# apt-get apt-transport-https
	# wget https://www.lesbonscomptes.com/pages/jf-at-dockes.org.pgp
	# gpg --import jf-at-dockes.org.pgp
	# gpg --export '7808CE96D38B9201' | sudo apt-key add -
	# nano /etc/apt/sources.list.d/upmpdcli.list
		#deb http://www.lesbonscomptes.com/upmpdcli/downloads/debian/ jessie main 
		deb-src http://www.lesbonscomptes.com/upmpdcli/downloads/debian/ jessie main
	# apt-get update

	# apt-get install build-essential devscripts debhelper quilt cdbs
	# apt-get install fakeroot
	# apt-get install dh-autoreconf autoconf automake libtool pkg-config
	# apt-get install libexpat1-dev libcurl4-gnutls-dev g++
	# apt-get install libmpdclient-dev libmicrohttpd-dev python-requests libjsoncpp-dev
	# apt-get install dh-systemd
	# apt-get install qt5-default qt5-qmake qtbase5-dev

	# cd
	# mkdir build
	# cd build

	# mkdir libupnp
	# cd libupnp
	# apt-get source libupnp
	# cd libupnp-1.6.20.jfd5/
	# debuild  -us -uc
	# cd ..
	##dpkg -i *.deb
	# cd ..

	##mkdir libnpupnp1
	##cd libnpupnp1
	##apt-get source libnpupnp1
	##cd libnpupnp1-4.0.5/
	##debuild -us -uc
	##cd ..
	##dpkg -i *.deb
	##cd ..

	# mkdir libupnpp6
	# cd libupnpp6
	# apt-get source libupnpp6
	# cd libupnpp6-0.17.2
	# debuild  -us -uc
	# cd ..
	# dpkg -i *.deb
	# cd ..

	# dpkg -i libupnp/libupnp6_*.deb libupnp/*dev*.deb libupnpp6/*.deb
	# mkdir upmpdcli
	# cd upmpdcli
	# apt-get source upmpdcli
	# cd upmpdcli-1.4.10/
	# debuild  -us -uc
	# cd ..
	##dpkg -i *.deb
	# cd
	
	$ scp root@192.168.0.37:/root/build/{libupnp/*.deb,libupnpp6/*.deb,upmpdcli/*.deb} ~/Downloads

	# apt-get install libmpdclient2 libexpat1 python3 python3-requests # libcurl4
	# apt-get install libjsoncpp0 libmicrohttpd10
	# apt-get install libstdc++6
	# dpkg -i copy/libupnpp*.deb copy/upmpdcli_*.deb

	# apt-get install autoconf automake build-essential libtool pkg-config
	# apt-get install libupnp6-dev libexpat1-dev libmpdclient-dev libcurl4-gnutls-dev libmicrohttpd-dev libjsoncpp-dev python3-requests
	# cd
	# wget https://www.lesbonscomptes.com/upmpdcli/downloads/libupnpp-0.17.2.tar.gz
	# tar -xvf libupnpp-0.17.2.tar.gz
	# cd libupnpp-0.17.2
	# ./configure
	# make
	# make install
	# ls -al /usr/local/lib/libupnpp.so.8.0.2
	# chmod -x /usr/local/lib/libupnpp.so.8.0.2
	# strip --strip-debug /usr/local/lib/libupnpp.so.8.0.2
	# ls -al /usr/local/lib/libupnpp.so.8.0.2
	# cd
	# wget https://www.lesbonscomptes.com/upmpdcli/downloads/upmpdcli-1.4.10.tar.gz
	# tar -xvf upmpdcli-1.4.5.tar.gz
	# cd upmpdcli-1.4.5
	# ./configure
	# make
	# make install
	# ls -al /usr/local/bin/upmpdcli
	# file /usr/local/bin/upmpdcli
	# strip --stip-debug /usr/local/bin/upmpdcli
	# ls -al /usr/local/bin/upmpdcli
	# cd
	# wget https://www.lesbonscomptes.com/upmpdcli/downloads/debian/pool/main/u/upmpdcli/upmpdcli-tidal_1.4.10-1~ppa1~buster_all.deb
	# dpkg -i upmpdcli-tidal_1.4.10-1~ppa1~buster_all.deb
	# adduser upmpdcli

	# mv copy/icon.png /usr/share/upmpdcli/
	# sed -i '/checkcontentformat =/s/^#//; /checkcontentformat =/s/= .*/= 0/' /etc/upmpdcli.conf
	# sed -i '/radiolist/s/^/#/' /etc/upmpdcli.conf
	# sed -i '/tidalquality =/s/^#//; /tidalquality =/s/= .*/= lossless/' /etc/upmpdcli.conf
	# grep -e checkcontentformat -e tidalquality -e radiolist /etc/upmpdcli.conf
		checkcontentformat = 0
		#radiolist = /usr/share/upmpdcli/radio_scripts/radiolist.conf
		tidalquality = lossless
	##systemctl disable upmpdcli.service
	# sysv-rc-conf
		Disable upmpdcli (2-3-4-5)
	# nano /etc/upmpdcli.conf
	  	...

7. AirConnect & squeezelite & ttyd

	# mv copy/airupnp-arm5 copy/squeezelite-static copy/ttyd /usr/bin/

8. Spotifyd (Not Available)

	# wget https://github.com/Spotifyd/spotifyd/releases/download/v0.2.19/spotifyd-2019-10-06-armv6-slim.zip
	# unzip spotifyd-*.zip -d ~/ && rm spotifyd-*.zip
	# nano -L ~/spotifyd.conf

		[global]
		username = USER
		password = PASS
		backend = alsa
		device = pcm.0
		mixer = ctl.9
		device_name = Spotifyd
		bitrate = 320

9. myMPD

	# apt-get install gcc cmake perl libssl-dev libid3tag0-dev libflac-dev
	# curl -s https://github.com/jcorporation/myMPD/releases/latest | cut -d\" -f2 | sed 's/releases\/tag/archive/; s/$/.zip/' | wget --no-check-certificate "$(cat -)" -O ./mympd.zip
	# unzip mympd.zip -d ~/ && rm mympd.zip
	##wget https://github.com/jcorporation/myMPD/archive/v6.4.2.zip
	##unzip v6.4.2.zip -d ~/ && rm v6.4.2.zip
	# cd myMPD*

	##nano contrib/packaging/debian/control
		debhelper (>= 9)
	##./build.sh pkgdebian

	# nano CMakeLists.txt
		cmake_minimum_required(VERSION 2.6)
	# nano cli_tools/CMakeLists.txt
		cmake_minimum_required(VERSION 2.6)

	# ./build.sh release
	# ls -al release/mympd release/cli_tools/mympd-config
	
	$ scp root@192.168.0.37:/root/myMPD-6.4.2/release/{mympd,cli_tools/mympd-config} ~/Downloads	

	# mv copy/mympd copy/mympd-config /usr/bin/
	# mv copy/mympd.conf /etc/
	# mkdir -p /usr/var/lib/mympd
	# getent group  mympd > /dev/null || groupadd -r mympd
	# getent passwd mympd > /dev/null || useradd -r -g mympd -s /bin/false -d /usr/var/lib/mympd mympd
	##mympd-config

	# ./build.sh install
	# ls -al /usr/local/bin/mympd /usr/local/bin/mympd-config
	# file   /usr/local/bin/mympd /usr/local/bin/mympd-config
	##strip --strip-debug /usr/local/bin/mympd /usr/local/bin/mympd-config
	# ls -al /usr/local/bin/mympd /usr/local/bin/mympd-config
	# mkdir -p /var/lib/mympd /usr/var/lib/mympd
	# chown -R mympd:mympd /var/lib/mympd /usr/var/lib/mympd

	# nano -L /usr/etc/mympd.conf
		 host = 127.0.0.1
		 port = 6600
		 music_directory = /var/lib/mpd/music
		 playlistdirectory = /var/lib/mpd/playlists
		#ssl
		#sslport
		 publish = true
		#webdav = false
		 loglevel = 1
		#user = mympd
		#sticker = false
		#mixramp = false
		 syscmds = true
		 mounts = false
		[syscmds]
		KBS 클래식 FM = kr2mpd 1fm
		KBS 쿨 FM     = kr2mpd 2fm
		MBC FM        = kr2mpd mbcm
		MBC FM4U      = kr2mpd mbc4u
		SBS 파워 FM   = kr2mpd sbsp
		SBS 러브 FM   = kr2mpd sbsl
		HR =
		웹 설정 - Web Settings   = ttyd -o -O -p 8080 bash -c "LANG=en_US.UTF-8 audio-config"&>/dev/null</dev/null 2>/dev/null
		웹 터미널 - Web Terminal = ttyd -o -O -p 8080 bash -c "sudo su"&>/dev/null</dev/null 2>/dev/null
		HR =
		다시 시작 - Reboot    = sudo reboot
		전원 끄기 - Power off = sudo poweroff\n' >> /usr/etc/mympd.conf
	# echo 'mympd ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
	##cp /lib/systemd/system/mympd.service /etc/systemd/system/mympd.service
	##nano /etc/systemd/system/mympd.service
		#Requires=network.target local-fs.target mpd.service
		#After=mpd.service
		#Protect...
		#Restrict...
	##systemctl disable mympd
	##systemctl daemon-reload
	##systemctl status mympd
	
	# mympd
		설정 > 외관 > 알림 > 페이지에 알림	

10. Build libaudiofile libFLAC

	# apt-get update
	# apt-get install libasound2-dev libflac-dev libogg-dev
	# export CFLAGS="-O2" ; export CXXFLAGS="-O2" ; export CPPFLAGS="-O2"

	# wget http://deb.debian.org/debian/pool/main/a/audiofile/audiofile_0.3.6.orig.tar.gz
	# tar xvzf audiofile_0.3.6.orig.tar.gz
	# wget http://deb.debian.org/debian/pool/main/a/audiofile/audiofile_0.3.6-5.debian.tar.xz
	# tar xvf  audiofile_0.3.6-5.debian.tar.xz
	# cp debian/patches/* audiofile-0.3.6/
	# rm -rf debian/
	# cd audiofile-0.3.6/
	# for i in *.patch; do patch -p1 < $i; done
	# ./configure
	# make
	# make install
	# ls -al /usr/local/lib/libaudiofile.so.1.0.0
	# chmod -x /usr/local/lib/libaudiofile.so.1.0.0
	# strip --strip-debug /usr/local/lib/libaudiofile.so.1.0.0
	# ls -al /usr/local/lib/libaudiofile.so.1.0.0
	# mv /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.orig
	# cp /usr/local/lib/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.sav
	# rm /usr/local/lib/libaudiofile*

	# wget http://deb.debian.org/debian/pool/main/f/flac/flac_1.3.3.orig.tar.xz
	# tar xvf flac_1.3.3.orig.tar.xz
	# wget http://deb.debian.org/debian/pool/main/f/flac/flac_1.3.3-1.debian.tar.xz
	# tar xvf flac_1.3.3-1.debian.tar.xz
	# cp debian/patches/* flac-1.3.3/
	# rm -rf debian/
	# cd flac-1.3.3/
	# for i in *.patch; do patch -p1 < $i; done
	# ./configure
	# make
	# make install
	# ls -al /usr/local/lib/libFLAC.so.8.3.0
	# chmod -x /usr/local/lib/libFLAC.so.8.3.0
	# sudo strip --strip-debug /usr/local/lib/libFLAC.so.8.3.0
	# ls -al /usr/local/lib/libFLAC.so.8.3.0
	# mv /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0.orig
	# cp /usr/local/lib/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0.sav
	# rm /usr/local/lib/libFLAC*

11. Tweak ALSA

	##ls -al /usr/lib/arm-linux-gnueabi/libasound*
	##mv /usr/lib/arm-linux-gnueabi/libasound.so.2.0.0 /etc/libasound.so.2.0.0.orig
	# mv copy/libasound.so.2.0.0.*  /etc/
	# sed -i 's/card 0/card 1/g' /usr/share/alsa/alsa.conf.{min,mix,plug}
	# grep -o 'card [0-9]' /usr/share/alsa/alsa.conf.{min,mix,plug}
	##rm /usr/lib/arm-linux-gnueabi/libasound.so*

	##ln -sf /etc/libasound.so.2.0.0.orig /usr/lib/arm-linux-gnueabi/libasound.so
	# cp /etc/libasound.so.2.0.0.min /run/shm/libasound.so.2

	##mv /usr/share/alsa /usr/share/alsa.orig
	##systemctl mask alsa-store.service
	##systemctl mask alsa-restore.service
	##nano /lib/modprobe.d/aliases.conf
		#options snd-usb-audio index=-2
	# mkdir /usr/share/alsa
	##cp /usr/share/alsa.orig/alsa.conf /usr/share/alsa/alsa.conf.orig
	# mv copy/alsa.conf.{min,mix,plug} /usr/share/alsa/
	# cp /usr/share/alsa/alsa.conf.min /run/shm/alsa.conf
	# ln -sf /run/shm/alsa.conf /usr/share/alsa/alsa.conf

12. Tweak decoder libraries

	##ls -al /usr/lib/arm-linux-gnueabi/lib{audiofile,FLAC.so}*
	# mv /usr/lib/arm-linux-gnueabi/libaudiofile.so.1.0.0 /etc/libaudiofile.so.1.0.0.orig
	# mv /usr/lib/arm-linux-gnueabi/libFLAC.so.8.3.0 /etc/libFLAC.so.8.3.0.orig
	# echo "/etc/libaudiofile.so.1.0.0.sav /run/shm/libaudiofile.so.1" | xargs -n 1 cp -v copy/libaudiofile.so.1.0.0
	# echo "/etc/libFLAC.so.8.3.0.sav /run/shm/libFLAC.so.8" | xargs -n 1 cp -v copy/libFLAC.so.8.3.0
	# rm -i /usr/lib/arm-linux-gnueabi/lib{audiofile.so*,FLAC.so*}
	# rm copy/{libaudiofile.so.1.0.0,libFLAC.so.8.3.0}
	##ln -sf /etc/libFLAC.so.8.3.0.sav      /usr/lib/arm-linux-gnueabi/libFLAC.so
	##ln -sf /etc/libaudiofile.so.1.0.0.sav /usr/lib/arm-linux-gnueabi/libaudiofile.so

	# ls -al /run/shm/
	# nano /etc/ld.so.conf.d/run_shm.conf
		/run/shm/
	# ldconfig
	# ls -al /usr/lib/arm-linux-gnueabi/lib{asound.so.*,audiofile.so.*,FLAC.so.*}

	# mount -o remount,exec /run/shm
	# mpd /etc/mpd.conf.sav
	# mpc update
	  mpd - Ctrl+C

13. Fstab

	# mkdir /mnt/{usb,cifs,nfs}
	# ln -s /mnt /var/lib/mpd/music
	# nano /etc/fstab
		#/dev/sdb1         /mnt/usb  auto ro 0 0
		#//192.168.0.x/xxx /mnt/cifs cifs guest,ro,iocharset=utf8 0 0
		#//192.168.0.x/xxx /mnt/cifs cifs username=user,password=pass,ro,iocharset=utf8 0 0
		#192.168.0.x:/xxx  /mnt/nfs  nfs  ro,sync,hard,intr,iocharset=utf8 0 0

14. Rc.local

	# nano /etc/rc.local

15. Sysctl.conf

	# nano /etc/sysctl.conf
	# sysctl -p /etc/sysctl.conf

16. Network configuration

	##nano /etc/network/interfaces

17. USB Auto Mount

	https://www.axllent.org/docs/view/auto-mounting-usb-storage/
	http://kissmyarch.blogspot.kr/2011/10/usb-automount.html

	# nano /lib/udev/rules.d/11-my-media-automount.rules

18. audio-config

	# mv copy/{audio-config,audioconf} /usr/bin/
	# mv copy/audio.conf /etc/default/
	# audio-config
	# audioconf

19. Disabel swap

	# cat /proc/swaps

20. Wi-Fi

	# wget http://ftp.us.debian.org/debian/pool/non-free/f/firmware-nonfree/firmware-misc-nonfree_20190717-2~bpo10+1_all.deb
	# dpkg -i firmware-misc*.deb
	# mv firmware-misc*.deb copy/
	##reboot
	##lsmod
	##ifconfig -a
	##apt-get install wpasupplicant
	##nano /etc/network/interfaces
		#auto wlan0
		#allow-hotplug wlan0
		iface wlan0 inet dhcp
		wpa-ssid wifi
		wpa-psk password
	##sed -i '/auto wlan0/s/^#*//; s/wpa-ssid.*/wpa-ssid wifi/; s/wpa-psk.*/wpa-psk password/' /etc/network/interfaces
	##sed -i '/auto wlan0/s/^/#/' /etc/network/interfaces

21. Copy to another disk with ext3

	https://www.tldp.org/HOWTO/Hard-Disk-Upgrade/copy.html
	$ sudo cp -av /source/. /dest/
	$ sudo nano /dest/etc/fstab
		LABEL=rootfs / ext3  noatime,errors=remount-ro 0 1

22. Image Build

	# ls -al /usr/lib/arm-linux-gnueabi/lib{asound.so.*,audiofile.so.*,FLAC.so.*}
	# sed -i '/ssh=/s/=.*/=off/' /etc/default/audio.conf
	# cat /etc/default/audio.conf
	# echo "* Mino's UPnP Audio Renderer for Pogoplug $(date +"%y.%m")" > ~/release
	# cat ~/release
	# mpc clear
	# rm -f ~/.bash_history /nohup.out; history -c
	# poweroff

	$ sudo fdisk -l
	$ sudo dd bs=4M status=progress if=/dev/sdc of=pogo_e02_audio_renderer_$(date +"%y.%m").img
	$ zip -dd pogo_e02_audio_renderer_$(date +"%y.%m").zip pogo_e02_audio_renderer_$(date +"%y.%m").img

	$ sudo mv /media/parkmino/rootfs/boot/uImage /media/parkmino/rootfs/boot/uImage.e02
	$ sudo mv /media/parkmino/rootfs/boot/uImage.v4 /media/parkmino/rootfs/boot/uImage
	$ ls -al /media/parkmino/rootfs/boot
	$ sudo dd bs=4M status=progress if=/dev/sdc of=pogo_v4_audio_renderer_$(date +"%y.%m").img
	$ zip -dd pogo_v4_audio_renderer_$(date +"%y.%m").zip pogo_v4_audio_renderer_$(date +"%y.%m").img

	$ sudo mv /media/parkmino/rootfs/boot/uImage /media/parkmino/rootfs/boot/uImage.v4
	$ sudo mv /media/parkmino/rootfs/boot/uImage.orig /media/parkmino/rootfs/boot/uImage
	$ ls -al /media/parkmino/rootfs/boot
	$ sudo dd bs=4M status=progress if=/dev/sdc of=kirkwood_audio_renderer_$(date +"%y.%m").img
	$ zip -dd kirkwood_audio_renderer_$(date +"%y.%m").zip kirkwood_audio_renderer_$(date +"%y.%m").img

	$ sudo mv /media/parkmino/rootfs/boot/uImage /media/parkmino/rootfs/boot/uImage.orig
	$ sudo mv /media/parkmino/rootfs/boot/uImage.e02 /media/parkmino/rootfs/boot/uImage
	$ ls -al /media/parkmino/rootfs/boot

	$ sudo fdisk -l
	$ sudo umount /dev/sdc?
	$ sudo dd status=progress bs=4M if=/home/parkmino/Downloads/pogoplug/pogo_e02_audio_renderer_$(date +"%y.%m").img of=/dev/sdc
