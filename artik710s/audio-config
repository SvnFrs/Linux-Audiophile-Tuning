#!/bin/bash

[ -e /etc/mpd.conf.sav ] && mpd_conf=/etc/mpd.conf.sav || mpd_conf=/etc/mpd.conf
[ -e /etc/upmpdcli.conf.sav ] && upmpdcli_conf=/etc/upmpdcli.conf.sav || upmpdcli_conf=/etc/upmpdcli.conf
spotifyd_conf=/root/spotifyd.conf

ethernet_ip () {
i=$(whiptail --title "Ethernet IP / 유선 IP 설정" --menu "Select/선택" --ok-button "OK/확인" --cancel-button "Cancel/취소" --backtitle "Audio-config" 10 45 2 \
"1" "Dynamic IP (DHCP)       자동 IP" \
"2" "Static  IP              수동 IP   >" 3>&1 1>&2 2>&3)

[ -n "$(which connmanctl)" ] && eth=$(connmanctl services | grep -om1 ethernet.*)

case $i in
 1) connmanctl config $eth --ipv4 dhcp ;;
 2) user_ip=$(whiptail --title "Ethernet IP / 유선 IP 설정" --inputbox "\

Input Static IP address to use.       사용할 수동 IP를 입력합니다.
Current IP is listed below.           아래는 현재 주소입니다.
Otherwise, 192.168.0.9 will be used.  아니면 192.168.0.9로 설정합니다." --ok-button "OK/확인" --cancel-button "Cancel/취소" --backtitle "Audio-config" 11 75 $(hostname -I) 3>&1 1>&2 2>&3)
    exitstatus=$?
    if [ "$exitstatus" = 0 ]; then
     if [ -z "$user_ip" ]; then
      ip_1st=$(echo "$(hostname -I)" | cut -d "." -f1)
      ip_2nd=$(echo "$(hostname -I)" | cut -d "." -f2)
      ip_3rd=$(echo "$(hostname -I)" | cut -d "." -f3)
      ip_4th=$(echo "$(hostname -I)" | cut -d "." -f4)
     else
      ip_1st=$(echo "$user_ip" | cut -d "." -f1)
      ip_2nd=$(echo "$user_ip" | cut -d "." -f2)
      ip_3rd=$(echo "$user_ip" | cut -d "." -f3)
      ip_4th=$(echo "$user_ip" | cut -d "." -f4)
     fi
     if [ "$ip_1st" -ge "1" ] 2>/dev/null && [ "$ip_1st" -le "254" ] 2>/dev/null && [ "$ip_1st" -ne "127" ] 2>/dev/null && [ "$ip_2nd" -ge "0" ] 2>/dev/null && [ "$ip_2nd" -le "255" ] 2>/dev/null && [ "$ip_3rd" -ge "0" ] 2>/dev/null && [ "$ip_3rd" -le "255" ] 2>/dev/null && [ "$ip_4th" -ge "2" ] 2>/dev/null && [ "$ip_4th" -le "254" ] 2>/dev/null ; then
      ip=$ip_1st.$ip_2nd.$ip_3rd
      ip_all=$ip_1st.$ip_2nd.$ip_3rd.$ip_4th
     else
      ip=192.168.0
      ip_all=192.168.0.9
     fi
     connmanctl config $eth --ipv4 manual $ip_all 255.255.255.0 $ip.1
     systemctl disable dhcpcd.service
    fi ;;
esac
}

wifi_client () {
i=$(whiptail --title "Wi-Fi Client / 무선 연결" --menu "Select/선택" --ok-button "OK/확인" --cancel-button "Cancel/취소" --backtitle "Audio-config" 10 50 2 \
"1" "Enable  Wi-Fi       무선 연결        >" \
"2" "Disable Wi-Fi       무선 연결 안 함" 3>&1 1>&2 2>&3)
#"0" "Scan    Wi-Fi       무선 검색" \

[ -n "$(which connmanctl)" ] && eth=$(connmanctl services | grep -om1 ethernet.*)

case $i in
 0) wpa_cli -iwlan0 scan && echo "$(wpa_cli scan_results)" > ~/scan_wifi.txt
    whiptail --title "Scan Wi-Fi / 무선 검색" --scrolltext --textbox ~/scan_wifi.txt --ok-button "OK/확인" --backtitle "Audio-config" 18 75 ;;
 1) wifi=$(whiptail --title "Wi-Fi Client / 무선 연결" --inputbox "\

Input AP and password to use.   공유기와 비밀번호를 입력합니다.
Use space in between.           사이에 빈 칸을 입력합니다." --ok-button "OK/확인" --cancel-button "Cancel/취소" --backtitle "Audio-config" 11 67 "AP password" 3>&1 1>&2 2>&3)
    exitstatus=$?
    if [ "$exitstatus" = 0 ]; then
     ap=$(echo "$wifi" | cut -d " " -f1)
     pass=$(echo "$wifi" | rev | cut -d " " -f1 | rev)
    fi
    if [ -n "$ap" ] && [ -n "$pass" ]; then
     wpa_passphrase $ap $pass >> /etc/wpa_supplicant/wpa_supplicant.conf
     systemctl unmask wpa_supplicant
     systemctl start  wlan_dhcp
     systemctl start  wpa_supplicant
     systemctl enable wlan_dhcp
     systemctl enable wpa_supplicant
     dhclient wlan0
    fi ;;
 2) sed -i '/^network={/,$d' /etc/wpa_supplicant/wpa_supplicant.conf
    systemctl disable wpa_supplicant
    systemctl disable wlan_dhcp
    systemctl mask    wpa_supplicant ;;
esac
}

mpd_options () {
i=$(whiptail --title "MPD options / MPD 옵션" --checklist "Check/확인" --ok-button "OK/확인" --cancel-button "Cancel/취소" --backtitle "Audio-config" 10 64 3 \
"dop"      "Enable DoP (DSD over PCM)   DoP 사용" $(grep -q '^dop' $mpd_conf && echo ON || echo OFF) \
"folder"   "Enable Music Folder         음악 폴더 사용" $(grep -q '^music_directory' $mpd_conf && echo ON || echo OFF) \
"tag"      "Enable Metadata             태그 사용" $(grep -q '^metadata.*none' $mpd_conf && echo OFF || echo ON) 3>&1 1>&2 2>&3)

exitstatus=$?
if [ "$exitstatus" = 0 ]; then
 [[ $i =~ dop    ]] && sed -i '/dop/s/^#*//g' $mpd_conf || sed -i '/^dop/s/^/#/g' $mpd_conf
 [[ $i =~ folder ]] && sed -i '/^#*music_directory\|^#*db_file/s/^#*//' $mpd_conf || sed -i '/^music_directory\|^db_file/s/^/#/g' $mpd_conf
 [[ $i =~ tag    ]] && sed -i '/metadata.*none/s/^/#/' $mpd_conf || sed -i '/metadata.*none/s/^#*//' $mpd_conf
fi
}

mpd_roon_air () {
i=$(whiptail --title "MPD, Roon Bridge, AirPlay" --checklist "Check/확인" --ok-button "OK/확인" --cancel-button "Cancel/취소" --backtitle "Audio-config" 10 59 3 \
"mpd"       "Enable MPD           MPD 사용" $(grep -q '^musicpd_bg &' /etc/rc.local && echo ON || echo OFF) \
"roon"      "Enable Roon Bridge   룬 브리지 사용" $(grep -q '^(roon_bridge' /etc/rc.local && echo ON || echo OFF) \
"airplay"   "Enable AirPlay       에어플레이 사용" $(grep -q '^(shairport_sync' /etc/rc.local && echo ON || echo OFF) 3>&1 1>&2 2>&3)

exitstatus=$?
if [ "$exitstatus" = 0 ]; then
 [[ $i =~ mpd ]] && sed -i '/musicpd_bg &/,+2s/^#*//' /etc/rc.local || sed -i '/musicpd_bg &/,+2s/^/#/' /etc/rc.local
 [[ $i =~ roon ]] && sed -i '/(roon_bridge/s/^#*//' /etc/rc.local || sed -i '/(roon_bridge/s/^/#/' /etc/rc.local
 [[ $i =~ airplay ]] && sed -i '/(shairport_sync/s/^#*//' /etc/rc.local || sed -i '/(shairport_sync/s/^/#/' /etc/rc.local
fi
}

while true; do
 i=$(whiptail --title "Audio-config / 오디오 설정" --menu "Choose/선택" --ok-button "OK/확인" --cancel-button "Exit/나가기" --backtitle "Audio-config" 14 70 6 \
"1"  "Ethernet IP                   유선 IP 설정                 >" \
"2"  "Wi-Fi client                  무선 연결                    >" \
"3"  "MPD, Roon Bridge, Airplay     MPD, 룬 브리지, 에어플레이   >" \
"4"  "MPD options                   MPD 옵션                     >" \
"5"  "Reboot                        다시 시작" \
"6"  "Power off                     전원 끄기" 3>&1 1>&2 2>&3)

 exitstatus=$?
 [ "$exitstatus" != 0 ] && exit

 case $i in
  1) ethernet_ip ;;
  2) wifi_client ;;
  3) mpd_roon_air ;;
  4) mpd_options ;;
  5) reboot ;;
  6) poweroff ;;
 esac
done
