UPnP/DLNA Audio Render for Raspberry Pi

0. Flashing

	https://www.raspberrypi.org/downloads/raspbian/
	http://downloads.raspberrypi.org/raspbian_lite/images/

	$ sudo fdisk -l
	$ sudo umount /dev/sdc?
	$ sudo dd status=progress bs=4M if=/home/parkmino/Downloads/raspi/2019-09-26-raspbian-buster-lite.img of=/dev/sdc
	$#sudo dd status=progress bs=4M if=/home/parkmino/Downloads/raspi/DietPi_RPi-ARMv6-Stretch.img of=/dev/sdc
	$ sync

	$ sudo raspi-config
		5 Interfacing Options > P2 SSH

	$ ssh pi@raspbian_ip
	  password: raspberry
	$#ssh root@dietpi_ip
	  password: dietpi

1. Update & upgrade

	$ sudo apt-get update
	$ sudo apt-get upgrade
	$ sudo apt-get dist-upgrade
	$ sudo apt-get autoremove

	$ sudo apt-get install bc exfat-fuse exfat-utils ntpdate python-pycryptodome uhubctl
	# apt-get install openssh-client libusb-0.1-4

	$#scp rc.local alsa.conf.{min,mix,plug} libasound.so.2.0.0.{min,mix} libaudiofile.so.1.0.0 libFLAC.so.8.3.0 mpd mpd.conf kr2mpd sbs_dec.py ut2mpd tts2mpd *.pls *.m3u icon.png llctl spotifyd.conf audio.conf audio-config pi@192.168.0.32:/home/pi/
	$ scp /home/parkmino/Downloads/raspi/copy/* pi@192.168.0.32:/home/pi/

2. Configuration file

	$ sudo nano /boot/config.txt
		#dtparam=audio=on
		#dtoverlay=vc4-fkms-v3d
		#max_framebuffers=2
		gpu_mem=16
		disable_splash=1

	$ cat /proc/cpuinfo
	$ cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq

3. Kernel option

	$ sudo nano /boot/cmdline.txt
		#root=/dev/mmcblk0p2
		#console=serial0,115200 console=tty1
		elevator=noop
		consoleblank=0
		smsc95xx.turbo_mode=0
		selinux=0

4. Localisation

	$ sudo dpkg-reconfigure locales
	$ sudo dpkg-reconfigure tzdata
	
5. Disable modules

	$ lsmod
	$ sudo nano /etc/modprobe.d/raspi-blacklist.conf
		#blacklist 8021q
		blacklist bcm2835_codec
		blacklist bcm2835_v4l2
		blacklist ip_tables
		blacklist raspberrypi_hwmon
		blacklist uio
		blacklist uio-pdrv-genirq
		blacklist vc_sm_cma
		blacklist x_tables
		#blacklist bcm2835_gpiomem
		#blacklist fixed
		#blacklist ip_tables
		###Disable RPi3 Wi-Fi
		#blacklist brcmfmac
		###Disable RPi3 Bluetooth
		#blacklist btbcm
		#blacklist hci_uart

6. Disable services

	$ sudo systemctl disable getty@tty1 cron rsyslog systemd-timesyncd triggerhappy avahi-daemon hciuart # rng-tools systemd-resolved dbus.service dbus.socket
	$ sudo systemctl mask systemd-journald.service systemd-journald.socket systemd-journald-audit.service systemd-journald-audit.socket systemd-journald-dev-log.socket systemd-journal-flush systemd-logind

	# dietpi-services disable cron

7. ALSA

	$ sudo sh -c "cat /usr/share/alsa.orig/alsa.conf > /usr/share/alsa/alsa.conf.mix"
	$ sudo sed -i 's/^[ \t]*//; /^$/d' /usr/share/alsa/alsa.conf.mix
	$ head -20 /usr/share/alsa/alsa.conf.mix
	$ sudo nano -L /usr/share/alsa/alsa.conf.mix
	$ sudo sh -c "cat /usr/share/alsa/alsa.conf.min >> /usr/share/alsa/alsa.conf.mix"

	# mv libasound.so.2.0.0.* /usr/lib/arm-linux-gnueabihf/
	# mkdir /usr/share/alsa/
	# mv alsa.conf.* /usr/share/alsa/
	# sed -i 's/pcm.0.card 0/pcm.0.card 1/' /usr/share/alsa/alsa.conf.{min,mix,plug}

8. MPD

	$ sudo apt-get install libcue2 libaudiofile1 libavformat58 libflac8 libid3tag0 libmpdclient2 libupnp13 libcurl3-gnutls
	$ sudo mkdir -p /var/lib/mpd/music /var/lib/mpd/playlists /var/run/mpd
	$ sudo mv mpd /usr/bin/
	$ sudo mv mpd.conf /etc/mpd.conf.sav
	$ sudo apt-get install mpc ncmpc
	$ sudo mkdir /etc/ncmpc
	$ sudo nano /etc/ncmpc/config
		host = 127.0.0.1
	$ sudo mv /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo.orig
	$ sudo mv ncmpc.mo /usr/share/locale/ko/LC_MESSAGES/ncmpc.mo

9. Upmpdcli

10. CIFS & NFS & USB mounting

	$ #sudo apt-get install cifs-utils nfs-common
	$ sudo mkdir /mnt/cifs /mnt/nfs /mnt/usb
	$ sudo ln -s /mnt/ /var/lib/mpd/music
	$ sudo nano /etc/fstab
		/dev/mmcblk0p1  /boot           vfat    defaults          0       2
		/dev/mmcblk0p2  /               ext4    defaults,noatime  0       1
		#/var/swap
		/dev/sda1 /mnt/usb auto defaults,nofail,x-systemd.automount,x-systemd.device-timeout=1,ro 0 2
		#//192.168.0.x/xxx /mnt/cifs cifs guest,ro,iocharset=utf8 0 0
		#//192.168.0.x/xxx /mnt/cifs cifs username=user,password=pass,ro,iocharset=utf8 0 0
		#192.168.0.x:/xxx  /mnt/nfs  nfs  ro,sync,hard,intr,iocharset=utf8 0 0

11. Edit /etc/rc.local

	$ sudo mv rc.local /etc/
	# mv rc.local_dietpi /etc/rc.local
	$ sudo mv audio.conf /etc/default/
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.orig
	$ sudo mv libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.sav
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0.orig
	$ sudo mv libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0.sav

12. Sysctl Configuration

	$ sudo nano /etc/sysctl.conf
	$ sudo sysctl -p /etc/sysctl.conf

13. Disabel swap

	$ cat /proc/swaps
	$ sudo systemctl disable dphys-swapfile
	$ sudo swapoff -a
	$ sudo rm /var/swap

	# nano /etc/fstab
		#/var/swap ...
	# swapoff -a
	# rm /var/swap

14. USB Mount (Obsolete)

	https://wiki.archlinux.org/index.php/Fstab#External_devices

	$ sudo mkdir /mnt/usb
	$ sudo nano /etc/fstab
		 /dev/sda1 /mnt/usb auto defaults,nofail,x-systemd.device-timeout=1,ro 0 2
		#/dev/sda1 /mnt/usb vfat    ro 0 0
		#/dev/sda1 /mnt/usb ntfs-3g ro 0 0
	$ sudo nano /etc/rc.local
		systemd-udevd
	$ sudo systemctl daemon-reload
	$ sudo systemctl restart remote-fs.target
	$ sudo systemctl restart local-fs.target

15. Internet Radio & TTS (Text to Speech)

	$ sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
	$ sudo chmod a+rx /usr/local/bin/youtube-dl
	$ sudo mv kr2mpd sbs_dec.py ut2mpd tts2mpd /usr/bin/
	$ sudo mv internet\ radio.m3u /var/lib/mpd/playlists/
	$ sudo mkdir /var/lib/mpd/music/webradio
	$ sudo mv *.pls /var/lib/mpd/music/webradio
	$ mpc update

	##mv /usr/share/alsa /usr/share/alsa.orig
	##mkdir /usr/share/alsa
	##mv /usr/share/alsa.orig/alsa.conf.{min,mix,orig,plug} /usr/share/alsa/
	##mv /usr/lib/arm-linux-gnueabihf/libasound.so.2.0.0 /usr/lib/arm-linux-gnueabihf/libasound.so.2.0.0.orig

16. Roon Bridge

	# dietpi-services status
	# nano /DietPi/dietpi/.dietpi-services_include_exclude
		- avahi-daemon
		- mpd
		- mympd
		- roonbridge
		- shairport-sync

	https://kb.roonlabs.com/LinuxInstall

	$ sudo apt update

	$ curl -O http://download.roonlabs.com/builds/roonbridge-installer-linuxarmv7hf.sh
	$ chmod +x roonbridge-installer-linuxarmv7hf.sh
	$ sudo ./roonbridge-installer-linuxarmv7hf.sh

	$ #curl -O http://download.roonlabs.com/builds/roonbridge-installer-linuxarmv8.sh
	$ #chmod +x roonbridge-installer-linuxarmv8.sh
	$ #sudo ./roonbridge-installer-linuxarmv8.sh

	$ sudo nano /etc/systemd/system/roonbridge.service
		ExecStart=/opt/RoonBridge/Bridge/RoonBridge
	$ sudo nano -L /opt/RoonBridge/Bridge/RoonBridge
		#exec /bin/bash -c "exec -a $SCRIPT \"$MONO_DIR/bin/mono-sgen\" --debug --gc=sgen --server $SCRIPT.exe $@">/dev/null</dev/null 2>/dev/null
		 exec /bin/bash -c "exec -a $SCRIPT /dev/shm/nohup \"$MONO_DIR/bin/mono-sgen\" --debug --gc=sgen --server $SCRIPT.exe $@">/dev/null</dev/null 2>/dev/null
		#exec "$MONO_DIR/bin/mono-sgen" --debug --gc=sgen --server $SCRIPT.exe "$@">/dev/null</dev/null 2>/dev/null
		 exec "/dev/shm/nohup $MONO_DIR/bin/mono-sgen" --debug --gc=sgen --server $SCRIPT.exe "$@">/dev/null</dev/null 2>/dev/null
		 fi    
		   
	$ sudo systemctl daemon-reload
	$ sudo systemctl disable roonbridge

17. Librespot

	https://github.com/librespot-org/librespot

	$ sudo ntpdate pool.ntp.org
	$ sudo apt-get install build-essential cargo libasound2-dev
	$ wget https://github.com/librespot-org/librespot/archive/master.zip
	$ wget https://github.com/librespot-org/librespot/archive/v0.1.0.zip
	$ unzip master.zip && rm master.zip
	$ cd librespot-master
	$ nano Cargo.toml
		default = ["librespot-playback/alsa-backend"]
	$ cargo build --release
	$ file librespot
	$ strip --strip-debug librespot
	$ ./target/release/librespot -n Librespot --backend ?

	$ cp ./target/release/librespot /home/pi/
	$ sudo nano /etc/rc.local
		 cp /home/pi/librespot /dev/shm/
		/dev/shm/librespot -n Librespot -b 320 --backend alsa --device pcm.0 --mixer alsa --mixer-card ctl.9 -u USER -p PASS &
		...
		for i in RoonBridge librespot spotifyd networkaudiod squeezelite; do
	$ sudo nano /usr/bin/audio-config
		spotify_device=$(grep -om1 "librespot -n.*" /etc/rc.local | cut -d' ' -f3)
		sudo sed -i '/\/dev\/shm\/librespot/s/ -n.*-b / -n '"$input_device"' -b /' /etc/rc.local
		spotify_user=$(grep -om1 "librespot -n.*" /etc/rc.local | cut -d' ' -f15)
		sudo sed -i '/\/dev\/shm\/librespot/s/ -u.*-p / -u '"$input_user"' -p /' /etc/rc.local
		spotify_pwd=$(grep -om1 "librespot -n.*" /etc/rc.local | cut -d' ' -f17)
		sudo sed -i '/\/dev\/shm\/librespot/s/ -p .*/ -p '"$input_pwd"' \&/' /etc/rc.local

18. Spotifyd

	https://github.com/Spotifyd/spotifydf
	https://github.com/Spotifyd/spotifyd/releases/latest

	$ curl -s $(curl -s https://github.com/Spotifyd/spotifyd/releases/latest | cut -d\" -f2) | grep -m1 armv6 | cut -d\" -f2 | wget "https://github.com/$(cat -)"
	$ unzip spotifyd-*.zip -d ~/ && rm spotifyd-*.zip
	$ nano -L ~/spotifyd.conf

	[global]
	username = USER
	password = PASS
	backend = alsa
	device = pcm.0
	mixer = ctl.9
	device_name = Spotifyd
	bitrate = 320    
	  

19. AirConnect (AirPlay)

	https://github.com/philippe44/AirConnect

	$ wget https://raw.githubusercontent.com/philippe44/AirConnect/master/bin/airupnp-arm     -P ~/
	$ wget https://raw.githubusercontent.com/philippe44/AirConnect/master/bin/airupnp-aarch64 -P ~/
	$ wget https://raw.githubusercontent.com/philippe44/AirConnect/master/bin/airupnp-x86-64  -P ~/

	$ chmod +x ~/airupnp*

20. Shairport-sync (AirPlay - Obsolete)

	$ sudo apt-get update
	$ sudo apt-get install shairport-sync
	$ wget http://archive.raspbian.org/raspbian/pool/main/s/shairport-sync/shairport-sync_3.2.2-1+b2_armhf.deb
	$ sudo dpkg -i shairport*.deb

	# nano /DietPi/dietpi/dietpi-software
		aSOFTWARE_WHIP_NAME[$software_id]='Shairport Sync'
		...
		aSOFTWARE_REQUIRES_ALSA[$software_id]=0
	# dietpi-software
		Software Optimized >> Media Systems >> 37 Shairport Sync
	# systemctl unmask  udev
	# systemctl disable avahi-daemon shairport-sync

	$ sudo sed -i '/_device =/s/^\/*//; /output_device =/s/".*";/"pcm.0";/; /mixer_device =/s/".*";/"ctl.9";/' /etc/shairport-sync.conf
	$ #sudo sed -i '/_format =/s/^\/*//; /output_format =/s/".*";/"S24";/' /etc/shairport-sync.conf   # 24Bit Only
	$ sudo sed -i '/interpolation =/s/^\/*//; /interpolation =/s/".*";/"soxr";/' /etc/shairport-sync.conf
	$ sudo sed -i '/convolution =\|loudness =/s/^\/*//; /convolution =\|loudness =/s/".*"/"no"/' /etc/shairport-sync.conf
	$ sudo systemctl stop    avahi-daemon shairport-sync
	$ sudo systemctl disable avahi-daemon shairport-sync

21. HQPlayer NAA
	$ wget --no-check-certificate https://www.signalyst.eu/bins/naa/linux/xenial/networkaudiod_3.5.5-39_arm64.deb
	$ sudo dpkg -i networkaudiod*.deb
	$ sudo sed -i '/alsa=/s/=.*/=mix/' /etc/default/audio.conf

22. Squeezelite
	$ sudo apt-get install squeezelite
	$ sudo sed -i '/SL_SOUNDCARD/s/^#*//; /SL_SOUNDCARD/s/".*"/"pcm.0"/' /etc/default/squeezelite

23. Plexdrive (Google Drive)

	https://github.com/dweidenfeld/plexdrive
	https://github.com/dweidenfeld/plexdrive/releases/latest

	$ curl -s $(curl -s https://github.com/dweidenfeld/plexdrive/releases/latest | cut -d\" -f2) | grep -m1 arm7 | cut -d\" -f2 | wget "https://github.com/$(cat -)"
	$ chomd +x plexdrive-linux-arm7
	$ sudo mv ./plexdrive-linux-arm7 /usr/bin/plexdrive
	$ sudo nano /etc/systemd/system/plexdrive.service

	[Unit]
	Description=Plexdrive
	AssertPathIsDirectory=/mnt/plexdrive
	After=network-online.target

	[Service]
	Type=simple
	ExecStart=/usr/bin/plexdrive mount -o allow_other -v 2 /mnt/plexdrive
	ExecStop=/bin/fusermount -u /mnt/plexdrive
	Restart=on-abort

	[Install]
	WantedBy=default.target
	
	$ sudo systemctl daemon-reload
	
	$ sudo mkdir /mnt/plexdrive
	$ sudo systemctl start plexdrive.service
	$ sudo systemctl enable plexdrive.service

24. myMPD

	$ sudo apt-get install gcc cmake perl libssl-dev libid3tag0-dev libflac-dev
	$ curl -s https://github.com/jcorporation/myMPD/releases/latest | cut -d\" -f2 | sed 's/releases\/tag/archive/; s/$/.zip/' | wget --no-check-certificate "$(cat -)" -O ./mympd.zip
	$ unzip mympd.zip -d ~/ && rm mympd.zip
	$ cd myMPD*
	$ ./build.sh release
	$ sudo ./build.sh install
	$ ./build.sh pkgdebian

	$ sudo apt-get install libc6 openssl libid3tag0 libflac8 lrzsz # libmediainfo0v5
	$ curl -s https://download.opensuse.org/repositories/home:/jcorporation/Raspbian_10/armhf/ | grep -o 'mympd_[0-9.-]*_armhf.deb' | head -1 | wget "https://download.opensuse.org/repositories/home:/jcorporation/Raspbian_10/armhf/$(cat -)"
	$ sudo dpkg -i mympd*.deb

	$ sudo nano -L /etc/mympd.conf
		 host = 127.0.0.1
		 port = 6600
		 music_directory = /var/lib/mpd/music/
		 ssl = false
		#loglevel = 1
		#user = mympd
		 syscmds = true
	$#sudo chown -R pi /var/lib/mympd # dietpi
	$#sudo adduser pi mympd # dietpi
	$#sudo chomod -R 775 /var/lib/mympd
	
	$ sudo sed -i '/\[syscmds\]/q' /etc/mympd.conf

	$ sudo sh -c "echo 'HR =' >> /etc/mympd.conf"
	$ sudo sh -c "echo 'KBS 클래식 FM = kr2mpd 1fm' >> /etc/mympd.conf"
	$ sudo sh -c "echo 'KBS 쿨 FM     = kr2mpd 2fm' >> /etc/mympd.conf"
	$ sudo sh -c "echo 'MBC FM        = kr2mpd mbcm' >> /etc/mympd.conf"
	$ sudo sh -c "echo 'MBC FM4U      = kr2mpd mbc4u' >> /etc/mympd.conf"
	$ sudo sh -c "echo 'SBS 파워 FM   = kr2mpd sbsp' >> /etc/mympd.conf"
	$ sudo sh -c "echo 'SBS 러브 FM   = kr2mpd sbsl' >> /etc/mympd.conf"
	$ sudo sh -c "echo 'HR =' >> /etc/mympd.conf"
	$ sudo sh -c "echo '웹 설정 - Web Settings   = ttyd -o -O -p 8080 bash audio-config&>/dev/null</dev/null 2>/dev/null' >> /etc/mympd.conf"
	$ sudo sh -c "echo '웹 터미널 - Web Terminal = ttyd -o -O -p 8080 bash -c \"cd /home/pi; sudo su pi\"&>/dev/null</dev/null 2>/dev/null' >> /etc/mympd.conf"
	$ sudo sh -c "echo 'HR =' >> /etc/mympd.conf"
	$ sudo sh -c "echo '다시 시작 - Reboot    = sudo reboot' >>   /etc/mympd.conf"
	$ sudo sh -c "printf '전원 끄기 - Power off = sudo poweroff    \n  ' >> /etc/mympd.conf"

	$ sudo sh -c "printf 'HR =
KBS 클래식 FM = kr2mpd 1fm
KBS 쿨 FM     = kr2mpd 2fm
MBC FM        = kr2mpd mbcm
MBC FM4U      = kr2mpd mbc4u
SBS 파워 FM   = kr2mpd sbsp
SBS 러브 FM   = kr2mpd sbsl
HR =
웹 설정 - Web Settings   = ttyd -o -O -p 8080 bash audio-config&>/dev/null</dev/null 2>/dev/null
웹 터미널 - Web Terminal = ttyd -o -O -p 8080 bash -c \"cd /home/pi; sudo su pi\"&>/dev/null</dev/null 2>/dev/null
HR =
다시 시작 - Reboot    = sudo reboot
전원 끄기 - Power off = sudo poweroff    \n  ' >> /etc/mympd.conf"

	$ sudo sh -c " echo 'mympd ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers"
	$ sudo cp /lib/systemd/system/mympd.service /etc/systemd/system/mympd.service
	$ sudo nano /etc/systemd/system/mympd.service
		#Requires=network.target local-fs.target mpd.service
		#After=mpd.service
		#Protect...
		#Restrict...
	$ sudo systemctl disable mympd
	$ sudo systemctl daemon-reload
	$ systemctl status mympd

25. ttyd

	$ curl -s https://github.com/tsl0922/ttyd/releases/latest | cut -d\" -f2 | sed 's/tag/download/; s/$/\/ttyd_linux.armhf/' | wget "$(cat -)" -P ~/
	$ chmod +x ~/ttyd_linux.armhf
	$ sudo mv ~/ttyd_linux.armhf /usr/bin/ttyd

	# systemctl status  getty@tty1.service
	# systemctl stop    getty@tty1.service
	# systemctl disable getty@tty1.service

26. Web interface (Obsolete)

	$ sudo apt-get install lighttpd
	$#sudo systemctl disable lighttpd.service
	$ sudo nano /etc/lighttpd/lighttpd.conf
		server.modules = (
			...
			"mod_cgi",
		)
		server.username = "root"
		static-file.exclude-extensions = ( ..., ".sh" )
		cgi.assign = ( ".sh" => "/bin/sh" )
		alias.url += ( "/cgi-bin" => "/var/www/cgi-bin/" )
		$HTTP["url"] == "/cgi-bin" {
			cgi.assign = ( ".sh" => "" )
		    }
	$ sudo systemctl restart lighttpd
	$ sudo nano /var/www/cgi-bin/test.sh
	$ sudo nano /var/www/html/index.html
		 <form action="/cgi-bin/test.sh" method="get">
	$ sudo visudo
		www-data ALL=(ALL) NOPASSWD:ALL
	$ sudo adduser www-data sudo

27. audio-config

	$ sudo mv audio-config /usr/bin/
	$ audio-config

28. audio.conf

	$ cp audio.conf /etc/default/audio.conf

29. Build libaudiofile libFLAC

	$ sudo apt-get update
	$ sudo apt-get install libasound2-dev libflac-dev libogg-dev
	$ export CFLAGS="-O2" ; export CXXFLAGS="-O2" ; export CPPFLAGS="-O2"

	$ wget http://deb.debian.org/debian/pool/main/a/audiofile/audiofile_0.3.6.orig.tar.gz
	$ tar xvzf audiofile_0.3.6.orig.tar.gz
	$ wget http://deb.debian.org/debian/pool/main/a/audiofile/audiofile_0.3.6-5.debian.tar.xz
	$ tar xvf  audiofile_0.3.6-5.debian.tar.xz
	$ cp debian/patches/* audiofile-0.3.6/
	$ rm -rf debian/
	$ cd audiofile-0.3.6/
	$ for i in *.patch; do patch -p1 < $i; done
	$ ./configure
	$ make
	$ sudo make install
	$ ls -al /usr/local/lib/libaudiofile.so.1.0.0
	$ sudo chmod -x /usr/local/lib/libaudiofile.so.1.0.0
	$ sudo strip --strip-debug /usr/local/lib/libaudiofile.so.1.0.0
	$ ls -al /usr/local/lib/libaudiofile.so.1.0.0
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.orig
	$ sudo cp /usr/local/lib/libaudiofile.so.1.0.0 /usr/lib/arm-linux-gnueabihf/libaudiofile.so.1.0.0.sav

	$ wget http://deb.debian.org/debian/pool/main/f/flac/flac_1.3.3.orig.tar.xz
	$ tar xvf flac_1.3.3.orig.tar.xz
	$ wget http://deb.debian.org/debian/pool/main/f/flac/flac_1.3.3-1.debian.tar.xz
	$ tar xvf flac_1.3.3-1.debian.tar.xz
	$ cp debian/patches/* flac-1.3.3/
	$ rm -rf debian/
	$ cd flac-1.3.3/
	$ for i in *.patch; do patch -p1 < $i; done
	$ ./configure
	$ make
	$ sudo make install
	$ ls -al /usr/local/lib/libFLAC.so.8.3.0
	$ sudo chmod -x /usr/local/lib/libFLAC.so.8.3.0
	$ sudo strip --strip-debug /usr/local/lib/libFLAC.so.8.3.0
	$ ls -al /usr/local/lib/libFLAC.so.8.3.0
	$ sudo mv /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0.orig
	$ sudo cp /usr/local/lib/libFLAC.so.8.3.0 /usr/lib/arm-linux-gnueabihf/libFLAC.so.8.3.0.sav

30. Make Image

	$ sudo systemctl disable sshd
	##dietpi-services disable dropbear

	$ sudo ntpdate pool.ntp.org
	$ sudo apt-get update
	$ sudo apt-get upgrade
	$ sudo apt-get dist-upgrade
	$ sudo systemctl daemon-reload
	$ sudo youtube-dl --update
	$ echo "* Mino's UPnP Audio Renderer for Raspberry Pi $(date +"%y.%m")" > ~/release
	$ cat ~/release
	$ mpc clear
	$ sudo rm -rf /var/roon/* /var/lib/mympd/covercache/*
	$ sudo rm -f /root/.bash_history ~/.bash_history /nohup.out; history -c
	$ sudo poweroff

	$ sudo fdisk -l
	$ sudo dd bs=4M status=progress if=/dev/sdc of=raspi_audio_renderer_$(date +"%y.%m").img
	$ sync
	$ zip raspi_audio_renderer_$(date +"%y.%m").zip raspi_audio_renderer_$(date +"%y.%m").img

	https://github.com/Drewsif/PiShrink
	$ wget https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh
	$ chmod +x pishrink.sh
	$ sudo mv pishrink.sh /usr/local/bin
	$ sudo pishrink.sh raspi_audio_renderer_$(date +"%y.%m").img raspi_audio_renderer_expand_$(date +"%y.%m").img
	$ zip raspi_audio_renderer_expand_$(date +"%y.%m").zip raspi_audio_renderer_expand_$(date +"%y.%m").img

31. Disable Bluetooth UART for RPI3

	$ sudo systemctl disable hciuart
	$#printf "\ndtoverlay=pi3-disable-wifi\ndtoverlay=pi3-disable-bt\n" | sudo tee -a /boot/config.txt

32. Shirnk Image

	http://aoakley.com/articles/2015-10-09-resizing-sd-images.php
	https://github.com/Drewsif/PiShrink
	https://github.com/dydgns2017/raspberrypi_img_backup_script
