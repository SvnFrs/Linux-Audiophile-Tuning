Audio Render Advanced

0. Flashing

	https://www.raspberrypi.org/downloads/raspbian/
	http://downloads.raspberrypi.org/raspbian_lite/images/

	$ sudo fdisk -l
	$ sudo umount /dev/sdc?
	$ sudo dd status=progress bs=4M if=/home/parkmino/Downloads/2018-04-18-raspbian-stretch-lite.img of=/dev/sdc
	$ sudo dd status=progress bs=4M if=/home/parkmino/Downloads/DietPi_v6.17_RPi-ARMv6-Stretch.img of=/dev/sdc
	$ sync

	$ sudo raspi-config
		5 Interfacing Options > P2 SSH

	$ ssh pi@rpi_ip
	  password: raspberry
	$ ssh root@dietpi_ip
	  password: dietpi
	$ scp mpd mpd.conf hub-ctrl llctl icon.png audio-config kr2mpd sbs_dec.py ut2mpd tts *.pls pi@192.168.0.3:/home/pi/

1. Update & upgrade

	$ sudo apt-get update
	$ sudo apt-get upgrade
	$ sudo apt-get dist-upgrade

	$ sudo apt-get install bc exfat-fuse exfat-utils ntpdate python-crypto
	# apt-get install openssh-client libusb-0.1-4

2. Configuration file

	sudo nano /boot/config.txt
		#dtparam=audio=on
		gpu_mem=16
		disable_splash=1

	cat /proc/cpuinfo
	cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq

3. Kernel option

	sudo nano /boot/cmdline.txt
		root=/dev/mmcblk0p2
		#console=serial0,115200 console=tty1
		consoleblank=0
		smsc95xx.turbo_mode=0
		elevator=noop
		selinux=0

4. Localisation

	sudo dpkg-reconfigure locales
	sudo dpkg-reconfigure tzdata
	
5. Disable modules

	lsmod
	sudo nano /etc/modprobe.d/raspi-blacklist.conf
		#blacklist uio
		#blacklist uio-pdrv-genirq
		#blacklist cfg80211
		#blacklist bcm2835_gpiomem
		#blacklist fixed
		#blacklist ip_tables
		###Disable RPi3 Wi-Fi
		#blacklist brcmfmac
		#blacklist brcmutil
		###Disable RPi3 Bluetooth
		#blacklist btbcm
		#blacklist hci_uart

6. Disable services

	$ sudo systemctl disable getty@tty1 cron rsyslog systemd-timesyncd triggerhappy avahi-daemon
	$ sudo systemctl mask systemd-journald systemd-logind dbus.service dbus.socket
	$ #sudo systemctl mask systemd-journal-flush.service systemd-journald.service

7. ALSA

	$ cp alsa.conf alsa.conf.roon /usr/share/alsa/

8. MPD

	sudo apt-get install libcue1 libaudiofile1 libavformat57 libflac8 libid3tag0 libmpdclient2 libupnp6
	sudo mkdir -p /var/lib/mpd/music /var/lib/mpd/playlists /run/mpd
	sudo cp mpd /usr/bin/
	sudo cp mpd.conf /etc/mpd.conf.sav
	sudo apt-get install mpc ncmpc

9. Upmpdcli

10. CIFS & NFS mounting

	#sudo apt-get install cifs-utils nfs-common
	sudo mkdir /mnt/cifs /mnt/nfs
	sudo ln -s /mnt/ /var/lib/mpd/music
	sudo nano /etc/fstab
		#//192.168.0.x/xxx /mnt/cifs cifs guest,ro,iocharset=utf8 0 0
		#//192.168.0.x/xxx /mnt/cifs cifs username=user,password=pass,ro,iocharset=utf8 0 0
		#192.168.0.x:/xxx  /mnt/nfs  nfs  ro,sync,hard,intr,iocharset=utf8 0 0

11. Edit /etc/fstab

	/dev/mmcblk0p1  /boot           vfat    defaults          0       2
	/dev/mmcblk0p2  /               ext4    defaults,noatime  0       1

12. Edit /etc/rc.local
	
13. Sysctl Configuration

	sudo nano /etc/sysctl.conf
	sudo sysctl -p /etc/sysctl.conf

14. Disabel swap

	$ cat /proc/swaps
	$ sudo systemctl disable dphys-swapfile
	# nano /etc/fstab
		#/var/swap ...

15. USB Mount

	https://wiki.archlinux.org/index.php/Fstab#External_devices

	sudo mkdir /mnt/usb
	sudo nano /etc/fstab
		 /dev/sda1 /mnt/usb auto defaults,nofail,x-systemd.device-timeout=1,ro 0 2
		#/dev/sda1 /mnt/usb vfat    ro 0 0
		#/dev/sda1 /mnt/usb ntfs-3g ro 0 0
	sudo nano /etc/rc.local
		systemd-udevd
	sudo systemctl daemon-reload
	sudo systemctl restart remote-fs.target
	sudo systemctl restart local-fs.target

16. Internet Radio & TTS (Text to Speech)

	$ sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
	$ sudo chmod a+rx /usr/local/bin/youtube-dl
	$ sudo ln -sf /home/pi/kr2mpd /home/pi/sbs_dec.py /home/pi/ut2mpd /home/pi/tts /usr/bin/
	# ln -sf /root/kr2mpd /root/sbs_dec.py /root/ut2mpd /root/tts /usr/bin/
	$ sudo nano /var/lib/mpd/playlists/internet\ radio.m3u
	$ sudo mkdir /var/lib/mpd/music/webradio
	$ sudo mv *.pls /var/lib/mpd/music/webradio
	$ mpc update

	$ sudo apt-get install mpg123 sox libttspico-utils

17. Spotifyd

	https://github.com/Spotifyd/spotifydf
	https://github.com/Spotifyd/spotifyd/releases/latest

	$ #wget https://github.com/Spotifyd/spotifyd/releases/download/untagged-4cc466d87efba3c28f5a/spotifyd-2018-05-26-armv6.zip
	$ curl -s $(curl -s https://github.com/Spotifyd/spotifyd/releases/latest | cut -d\" -f2) | grep -m1 armv6 | cut -d\" -f2 | wget "https://github.com/$(cat -)"
	$ unzip spotifyd-*.zip -d ~/ && rm spotifyd-*.zip
	$ sudo nano /etc/rc.local

	spotifyd () {
	cp /usr/lib/arm-linux-gnueabihf/libasound.so.2.0.0_old /dev/shm/libasound.so.2.0.0
	cp /home/pi/spotifyd /home/pi/spotifyd.conf /dev/shm/
	sleep 1
	/dev/shm/spotifyd --no-daemon -c /dev/shm/spotifyd.conf&> /dev/null
	}
	...
	#spotifyd &

	$ nano ~/spotifyd.conf

	[global]
	username = USER
	password = PASS
	backend = alsa
	device = pcm.0
	mixer = /dev/mixer
	device_name = Spotifyd
	bitrate = 320

	nano audio-config

	sudo sed -i '/spotifyd &/s/^#*//' /etc/rc.local
	sudo sed -i '/spotifyd &/s/^/#/'  /etc/rc.local
	sed -i '/username/s/=.*/= 사용자/; /password/s/=.*/= 비밀번호/' ~/spotifyd.conf

18. Roon Bridge

	https://kb.roonlabs.com/LinuxInstall

	$ sudo ntpdate pool.ntp.org
	$ sudo apt update
	$ sudo apt upgrade
	$ sudo apt dist-upgrade

	# dietpi-services
	# nano /DietPi/dietpi/.dietpi-services_include_exclude
		- roonbridge
		- shairport-sync

	$ curl -O http://download.roonlabs.com/builds/roonbridge-installer-linuxarmv7hf.sh
	$ chmod +x roonbridge-installer-linuxarmv7hf.sh
	$ sudo ./roonbridge-installer-linuxarmv7hf.sh

	$ #curl -O http://download.roonlabs.com/builds/roonbridge-installer-linuxarmv8.sh
	$ #chmod +x roonbridge-installer-linuxarmv8.sh
	$ #sudo ./roonbridge-installer-linuxarmv8.sh	

	$ sudo nano /etc/systemd/system/roonbridge.service
		ExecStart=/opt/RoonBridge/Bridge/RoonBridge
		#ExecStart=nohup /opt/RoonBridge/Bridge/RoonBridge>/dev/null</dev/null 2>/dev/null
	$ sudo nano /opt/RoonBridge/Bridge/RoonBridge
		exec /bin/bash -c "exec -a $SCRIPT \"$MONO_DIR/bin/mono-sgen\" --debug --gc=sgen --server>/dev/null</dev/null 2>/dev/null #
		exec "$MONO_DIR/bin/mono-sgen" --debug --gc=sgen --server $SCRIPT.exe "$@">/dev/null</dev/null 2>/dev/null #
	$ sudo systemctl daemon-reload
	$ sudo systemctl disable roonbridge

	$ sudo sh -c "cat /usr/share/alsa.org/alsa.conf > /usr/share/alsa/alsa.conf.roon"
	$ sudo sed -i 's/^[ \t]*//; /^$/d' /usr/share/alsa/alsa.conf.roon
	$ head -20 /usr/share/alsa/alsa.conf.roon
	$ sudo nano /usr/share/alsa/alsa.conf.roon
	$ sudo sh -c "cat /usr/share/alsa/alsa.conf.sav >> /usr/share/alsa/alsa.conf.roon"

	$ sudo nano /etc/rc.local

	roon_bridge () {
	#[ -d /opt/RoonBridge ] && [ ! -d /opt/roon ] && mv /opt/RoonBridge /opt/roon
	#cp -r /opt/roon /dev/shm/
	#ln -sf /dev/shm/roon /opt/RoonBridge
	 cp /usr/share/alsa/alsa.conf.roon /dev/shm/alsa.conf
	 cp /usr/lib/arm-linux-gnueabihf/libasound.so.2.0.0_old /dev/shm/libasound.so.2.0.0
	 sleep 1
	 systemctl start roonbridge
	}
	...
	### Roon Bridge
	#(roon_bridge &) && sleep 3

	$ nano ~/audio-config

	sudo sed -i '/roon_bridge &/s/^#*//' /etc/rc.local
	sudo sed -i '/roon_bridge &/s/^/#/' /etc/rc.local

19. Shairport-sync (AirPlay)

	$ sudo apt-get update
	$ sudo apt-get install shairport-sync
	$ wget http://archive.raspbian.org/raspbian/pool/main/s/shairport-sync/shairport-sync_3.2.1-1_armhf.deb
	$ sudo dpkg -i shairport*.deb
	$ sudo sed -i '/_device =/s/^\/*//; /output_device =/s/".*";/"pcm.0";/; /mixer_device =/s/".*";/"\/dev\/null";/' /etc/shairport-sync.conf
	$ sudo sed -i '/_format =/s/^\/*//; /output_format =/s/".*";/"S24";/' /etc/shairport-sync.conf   # 24Bit Only
	$ sudo sed -i '/interpolation =/s/^\/*//; /interpolation =/s/".*";/"soxr";/' /etc/shairport-sync.conf
	$ sudo sed -i '/convolution =\|loudness =/s/^\/*//; /convolution =\|loudness =/s/".*"/"no"/' /etc/shairport-sync.conf
	$ sudo systemctl disable avahi-daemon shairport-sync
	$ sudo nano /etc/rc.local

	#service avahi-daemon stop
	shairport_sync () {
	 cp /usr/lib/arm-linux-gnueabihf/libasound.so.2.0.0_old /dev/shm/libasound.so.2.0.0
	 sleep 1
	 systemctl start avahi-daemon shairport-sync
	}
	...
	### Shaiport-sync
	#(shairport_sync &) && sleep 3

	$ nano ~/audio-config

20. myMPD

	$ sudo apt-get install libmediainfo-dev libmediainfo0v5
	$ curl -s https://github.com/jcorporation/myMPD/releases/latest | cut -d\" -f2 | sed 's/releases\/tag/archive/; s/$/.zip/' | wget "$(cat -)" -O ./mympd.zip
	$ unzip mympd.zip -d ~/ && rm mympd.zip
	$ cd myMPD*
	$ ./mkrelease.sh or ./mkdebian.sh

	$ curl -s https://download.opensuse.org/repositories/home:/jcorporation/Raspbian_9.0/armhf/ | grep -o 'mympd_[0-9.-]*_armhf.deb' | head -1 | wget "https://download.opensuse.org/repositories/home:/jcorporation/Raspbian_9.0/armhf/$(cat -)"
	$ sudo dpkg -i mympd*.deb

	$ sudo systemctl disable mympd
	$ sudo nano /etc/mympd/mympd.conf
		host = 127.0.0.1
		ssl = false
		loglevel = 0
		user = pi
		coverimage = true
		coverimage = cover.jpg
		stickers = false
		syscmds = true
		background = #111
		coverextract = true

	$ sudo sh -c "printf 'kr2mpd 1fm'   > '/etc/mympd/syscmds/1KBS 클래식 FM'"
	$ sudo sh -c "printf 'kr2mpd 2fm'   > '/etc/mympd/syscmds/2KBS 쿨 FM'"
	$ sudo sh -c "printf 'kr2mpd mbcm'  > '/etc/mympd/syscmds/3MBC FM'"
	$ sudo sh -c "printf 'kr2mpd mbc4u' > '/etc/mympd/syscmds/4MBC FM4U'"
	$ sudo sh -c "printf 'kr2mpd sbsp'  > '/etc/mympd/syscmds/5SBS 파워 FM'"
	$ sudo sh -c "printf 'kr2mpd sbsl'  > '/etc/mympd/syscmds/6SBS 러브 FM'"
	$ sudo touch /etc/mympd/syscmds/7HR
	$ sudo sh -c "printf 'sudo sed -i '/dop/s/^#*//' /etc/mpd.conf.sav' > '/etc/mympd/syscmds/8UPnP - DoP (DSD over PCM)'"
	$ sudo sh -c "printf 'sudo sed -i '/dop/s/^/#/'  /etc/mpd.conf.sav' > '/etc/mympd/syscmds/9UPnP - Native'"
	$ sudo touch /etc/mympd/syscmds/10HR
	$ sudo sh -c "printf 'sudo sed -i '/roon/s/=.*/=on/'  /etc/default/audio.conf' > '/etc/mympd/syscmds/11Roon Bridge - Enable'"
	$ sudo sh -c "printf 'sudo sed -i '/roon/s/=.*/=off/' /etc/default/audio.conf' > '/etc/mympd/syscmds/12Roon Bridge - Disable'"
	$ sudo touch /etc/mympd/syscmds/13HR
	$ #sudo sh -c "printf 'sudo systemctl start openssh' > '/etc/mympd/syscmds/14SSH - Start'"
	$ #sudo sh -c "printf 'sudo systemctl stop  openssh' > '/etc/mympd/syscmds/15SSH - Stop'"
	$ sudo sh -c "printf 'ttyd -o -O -p 8080 dash&>/dev/null</dev/null 2>/dev/null #' > '/etc/mympd/syscmds/14Web Terminal'"
	$ sudo touch /etc/mympd/syscmds/15HR
	$ sudo sh -c "printf 'sudo reboot'   > '/etc/mympd/syscmds/16Reboot       (다시 시작)'"
	$ sudo sh -c "printf 'sudo poweroff' > '/etc/mympd/syscmds/17Power off    (전원 끄기)'"
	$ sudo sh -c " echo 'mympd ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers"

21. audio-config

	$ cp audio-config ~/
	# cp audio-config_dietpi /root
	$ sudo ln -s /home/pi/audio-config /usr/bin/
	# ln -s /root/audio-config /usr/bin/
	$ audio-config

22. ttyd

	$ curl -s https://github.com/tsl0922/ttyd/releases/latest | cut -d\" -f2 | sed 's/tag/download/; s/$/\/ttyd_linux.armhf/' | wget "$(cat -)" -P ~/
	$ chmod +x ~/ttyd_linux.armhf
	$ sudo mv ~/ttyd_linux.armhf /usr/bin/ttyd

23. Web interface

	$ sudo apt-get install lighttpd
	$ #sudo systemctl disable lighttpd.service
	$ sudo nano /etc/lighttpd/lighttpd.conf
		server.modules = (
			...
			"mod_cgi",
		)
		server.username = "root"
		static-file.exclude-extensions = ( ..., ".sh" )
		cgi.assign = ( ".sh" => "/bin/sh" )
		alias.url += ( "/cgi-bin" => "/var/www/cgi-bin/" )
		$HTTP["url"] == "/cgi-bin" {
			cgi.assign = ( ".sh" => "" )
		    }
	$ sudo systemctl restart lighttpd
	$ sudo nano /var/www/cgi-bin/test.sh
	$ sudo nano /var/www/html/index.html
		 <form action="/cgi-bin/test.sh" method="get">
	$ sudo visudo
		www-data ALL=(ALL) NOPASSWD:ALL
	$ sudo adduser www-data sudo

24. Read-only (Just for reference)
	cp remountro remountrw ~/
	chmod +x remountro remountrw
	sudo ln -s /home/pi/remountro /home/pi/remountrw /usr/bin/
	sudo nano /etc/rc.local
		### Read-only
		#remountro
	sudo chmod -w /lib/systemd/systemd /etc/rc.local /usr/lib/arm-linux-gnueabihf/libasound.so.2.0.0.sav /usr/lib/arm-linux-gnueabihf/libasound.so.2.0.0.sav /usr/bin/mpd /etc/mpd.conf.sav /usr/bin/upmpdcli /etc/upmpdcli.conf
	sudo chmod -R -w /usr/lib/arm-linux-gnueabihf

25. audio.conf

	$ sudo nano /etc/default/audio.conf
		# audio.conf
		#
		# alsa has the options of min(imal), mix(er) and orig(inal).
		# To enable a feature, set feature=on.
		# To disable a feature, set feature=off
		# To ignore a feature, comment out the line by '#'

		alsa=min # min or mix or orig
		airplay=off
		roon=on
		spotify=off
		ssh=off
		upnp=on
		wifi=off
		tts=on
		tts_eng=off
	$ sudo nano /etc/rc.local		
		[ "$roonbridge" = on ] && (roon_bridge &) && sleep 3
		[ "$spotify" = on ] && (spotifyd &) && sleep 1
		if [ "$tts" = on ]; then
		 [ "$tts_eng" = on ] && tts en My I P is $(hostname -I) || tts
		fi

26. Make Image

	$ sudo ntpdate pool.ntp.org
	$ sudo apt-get update
	$ sudo apt-get upgrade
	$ sudo apt-get dist-upgrade
	$ sudo systemctl daemon-reload
	$ sudo youtube-dl --update
	$ echo "* Mino's UPnP Audio Renderer for Raspberry Pi $(date +"%y.%m")" > ~/release
	$ cat ~/release
	$ mpc clear
	$ sudo rm -rf /var/roon/*
	$ sudo rm -f /root/.bash_history ~/.bash_history /nohup.out; history -c
	$ sudo poweroff

	$ sudo fdisk -l
	$ sudo dd bs=4M status=progress if=/dev/sdc of=raspi_audio_renderer_$(date +"%y.%m").img
	$ sync
	$ zip raspi_audio_renderer_$(date +"%y.%m").zip raspi_audio_renderer_$(date +"%y.%m").img

	https://github.com/Drewsif/PiShrink
	$ wget https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh
	$ chmod +x pishrink.sh
	$ sudo mv pishrink.sh /usr/local/bin
	$ sudo pishrink.sh raspi_audio_renderer_$(date +"%y.%m").img raspi_audio_renderer_expand_$(date +"%y.%m").img
	$ zip raspi_audio_renderer_expand_$(date +"%y.%m").zip raspi_audio_renderer_expand_$(date +"%y.%m").img

cf)

sudo sed -i 's/raspbian.raspberrypi.org/mirrordirector.raspberrypi.org/' /etc/apt/sources.list
sudo sed -i 's/http:\/\/raspbian.raspberrypi.org/ftp:\/\/ftp.neowiz.com\/raspbian/' /etc/apt/sources.list
sudo sed -i 's/archive.raspberrypi.org/.../' /etc/apt/sources.list.d/raspi.list

https://www.raspberrypi.org/documentation/configuration/wireless/access-point.md
