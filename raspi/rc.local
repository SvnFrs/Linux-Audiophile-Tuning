#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

musicpd_bg () {
 until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -npt $(pgrep -x mpd) 2>/dev/null | grep -q output); do
  sleep 1
 done
 sleep 1
 pgr_mpd=$(pgrep -x mpd)
 taskset -pc $s_task $pgr_mpd
 #renice -1 -p       $pgr_mpd
 echo "$(pstree -npt $pgr_mpd)" | while read line ; do
  proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $proc in
   mpd)		 taskset -cp $h_task $proc_nr ;;
   io)		 taskset -cp $s_task $proc_nr ;;
   player)	 taskset -cp $s_task $proc_nr ;;
   decoder)	 taskset -cp $s_task $proc_nr ;;
   output)	 taskset -cp $m_task $proc_nr
		#renice -1 -p	     $proc_nr
		 chrt -op 0	     $proc_nr ;;
  esac
 done
 ### Text to Speech
 [ "$tts" = on ] && [ "$tts_eng" = on  ] && tts2mpd en My I P is $(hostname -I)
 [ "$tts" = on ] && [ "$tts_eng" = off ] && tts2mpd
/dev/shm/upmpdcli -c /dev/shm/upmpdcli.conf>/dev/null</dev/null 2>/dev/null
}

eol () {
 until [ $(pgrep -x upmpdcli) -gt 0 ] 2>/dev/null; do
  sleep 1
 done
 sleep 1
 taskset -acp $h_task $(pgrep -x upmpdcli) || true
 [ "$airplay" = on ] && airconnect
 /home/pi/llctl f0 l0 d0 || true
 echo none > /sys/class/leds/led0/trigger
 echo 0    > /sys/class/leds/led0/brightness
 sleep 1
 [ -f /sys/class/leds/led1/brightness ] && echo 0 > /sys/class/leds/led1/brightness
 pkill rc.local
}

roon_bridge () {
 if [ "$roontoram" = on ]; then
  cp -r /opt/RoonBridge /dev/shm/
  systemctl start roonbridgetoram
 else
  systemctl start roonbridge
 fi
}

sqzlite () {
 cp /home/pi/squeezelite /dev/shm/
/dev/shm/squeezelite -o pcm.hw -O ctl.hw -C 1 -z>/dev/null</dev/null 2>/dev/null || true
 pgr_sqz=$(pidof squeezelite)
 [ -z "$pgr_sqz" ] && continue
 [ "$h_task" -ge 1 ] && taskset -pc $s_task $pgr_sqz || true
 count=2
 echo "$(pstree -npt $pgr_sqz)" | while read line ; do
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $count in
   3) taskset -cp $m_task $proc_nr
      chrt    -op 0 $proc_nr       ;;
   *) taskset -cp $s_task $proc_nr ;;
  esac
  count=$(($count+1))
 done
}

spotifyd () {
#cp /home/pi/spotifyd /home/pi/spotifyd.conf /dev/shm/
#sleep 1
#/dev/shm/spotifyd --no-daemon --config-path /dev/shm/spotifyd.conf>/dev/null</dev/null 2>/dev/null
 cp /home/pi/librespot /dev/shm/
/dev/shm/librespot -n Librespot -b 320 --backend alsa --device pcm.hw --mixer alsa --mixer-card ctl.hw &
}

airconnect () {
 cp /home/pi/airupnp-arm /dev/shm/
/dev/shm/airupnp-arm -l 1000:2000 -Z -z>/dev/null</dev/null 2>/dev/null
 [ "$h_task" -ge 1 ] && taskset -acp $h_task $(pidof airupnp-arm) || true
}

[ -r /etc/default/audio.conf ] && . /etc/default/audio.conf

if [ "$alsa" = plug ]; then
 cp /etc/libasound.so.2.0.0.plug /dev/shm/libasound.so.2
 cp /usr/share/alsa/alsa.conf.plug /dev/shm/alsa.conf
elif [ "$alsa" = min ] && [ "$roon" = off ] && [ "$spotify" = off ]; then
 cp /etc/libasound.so.2.0.0.min /dev/shm/libasound.so.2
 cp /usr/share/alsa/alsa.conf.min /dev/shm/alsa.conf
 rm -rf /dev/snd/*c /dev/snd/by* || true
 rm /dev/snd/hw* /dev/snd/seq /dev/snd/timer || true
else
 cp /etc/libasound.so.2.0.0.mix /dev/shm/libasound.so.2
 cp /usr/share/alsa/alsa.conf.mix /dev/shm/alsa.conf
#rm /dev/snd/hw* /dev/snd/seq /dev/snd/timer || true
fi

ln -sf /dev/shm/alsa.conf /usr/share/alsa/alsa.conf
cp /usr/bin/nohup /usr/bin/mpd /usr/bin/upmpdcli /etc/upmpdcli.conf /usr/bin/mympd /etc/mympd.conf /dev/shm/
cp /etc/mpd.conf.sav /dev/shm/mpd.conf
cp /etc/libaudiofile.so.1.0.0.sav /dev/shm/libaudiofile.so.1
cp /etc/libFLAC.so.8.3.0.sav /dev/shm/libFLAC.so.8

echo 1000000 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_rate || true
echo 1 > /sys/devices/system/cpu/cpufreq/ondemand/ignore_nice_load || true
echo 100 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor || true
[ -e /sys/fs/cgroup/cpuset/cpuset.sched_load_balance ] && echo 0 > /sys/fs/cgroup/cpuset/cpuset.sched_load_balance || true

for i in $(ls /sys/block/*/queue/scheduler); do
 if   echo $(cat $i) | grep -q none; then
  echo none > $i
 elif echo $(cat $i) | grep -q noop; then
  echo noop > $i
 fi
done

#for i in ondemand conservative powersave; do
# grep -q $i /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors && gov="$i"
#done
#[ "$gov" != "" ] && echo "$gov" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor

for i in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 {print $1}'); do
 renice -2 $i
done

if [ "$tfc" = on ]; then
 echo "$(ifconfig -a | grep -o ^[a-z0-9]* | grep -v -e lo -e dummy)" | while read dev ; do
  tc qdisc add dev $dev root pfifo_fast
 #tc qdisc add dev $dev ingress
 #tc -s -d qdisc show dev $dev
 done
fi

for i in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration|mpd/ {print $1}'); do
 chrt -op 0 $i
 renice  -3 $i
done

### Remove services
#for i in cron rsyslog systemd-journald systemd-logind systemd-timesyncd triggerhappy dbus # systemd-udevd
#do
# service $i stop
#done
pkill alsactl || true
pkill rngd    || true
[ "$dbus" = off ] && systemctl stop dbus  || true
[ "$wifi" = off ] && pkill wpa_supplicant || true
swapoff -a

### myMPD & SSH
[ "$mympd"  = on ] && /dev/shm/mympd /dev/shm/mympd.conf&</dev/null 2>/dev/null
[ "$ssh"    = on ] && systemctl start ssh

m_task=$(($(nproc --all)-1)); h_task=0; s_task=0
[ "$m_task" -ge 3 ] && h_task=$((m_task-1)) && s_task=$((m_task-2))

if [ "$m_task" -ge 1 ];then
 for pid in $(ps -eo pid,comm | awk '$2 !~ /systemd$|mpd|networkaudiod|squeezelite/ {print $1}'); do
  taskset -acp 0 $pid 2>/dev/null || true
 done
fi

### For Criterion from Reference Club
#amixer -D control set 'XMOS Clock Selector',0 Capture 0 0 off off
#amixer -D control set 'XMOS Clock Selector',1 Capture 0 off

### Unmute IQaudIO I2S
#echo "22"  > /sys/class/gpio/export
#echo "out" > /sys/class/gpio/gpio22/direction
#echo "1"   > /sys/class/gpio/gpio22/value

### Digital Volume
#amixer -D control set 'Digital',0 67% || true # 40@67% 60@81%

### Turn off USBs
[ "$usb" = "on" ] || uhubctl -a 0 -p "$usb"

### Turn off HDMI
/opt/vc/bin/tvservice -o
#service getty@tty1 stop

### Roon Bridge
[ "$roon" = on ] && (roon_bridge &) && sleep 3

### Squeezelite
[ "$sqzlite" = on ] && sqzlite

### Spotify
[ "$spotify" = on ] && (spotifyd &) # && sleep 3

### Taskset
[ -e /proc/irq/default_smp_affinity ] && echo $(echo "2^$h_task" | bc) > /proc/irq/default_smp_affinity || true
for pid in 1 $(pgrep -x rc.local); do
 taskset -acp $s_task $pid || true
done

for i in RoonBridge librespot spotifyd networkaudiod; do
 if [ $m_task -ge 1 ] && [ $(pidof $i) -ge 1 ] 2>/dev/null; then
  taskset -acp 1-$m_task $(pidof $i) || true
 fi
done

### Text to Speech
#[ "$tts" = on ] && [ "$tts_eng" = on  ] && tts en My I P is $(hostname -I)
#[ "$tts" = on ] && [ "$tts_eng" = off ] && tts

### Read-only
#remountro

if [ "$upnp" = on ]; then
 musicpd_bg &
 eol &
/dev/shm/mpd /dev/shm/mpd.conf>/dev/null</dev/null 2>/dev/null
else
 pkill rc.local
fi

exit 0
