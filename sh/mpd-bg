#!/bin/sh

mpd_ver=$(/dev/shm/mpd --version | head -1 | cut -d. -f2 | cut -d~ -f1)

sec=0
until [ "$(pgrep -x mpd)" -gt 0 ] 2>/dev/null; do
 sleep 1
 sec=$(($sec+1))
 [ "$sec" -ge 10 ] && printf "\nMPD is not available!\n" && exit
done

sleep 1
[ "$mpd_ver" -ge 21 ] && mpc add Etc/blank.mp3 && mpc play $(mpc playlist | wc -l)

sec=0
until [ "$(pgrep -x mpd)" -gt 0 ] 2>/dev/null && $(pstree -npt "$(pgrep -x mpd)" 2>/dev/null | grep -q output); do
 [ "$mpd_ver" -ge 21 ] && mpc play $(mpc playlist | wc -l)
 sec=$(($sec+1))
 [ "$sec" -ge 5 ] && printf "\nNo MPD audio output and exit!\n" && exit
done

[ "$mpd_ver" -ge 21 ] && mpc del $(mpc playlist | wc -l)

m_task=$(($(nproc --all)-1)); h_task=0; s_task=0
[ "$m_task" -ge 3 ] && h_task=$((m_task-1)) && s_task=$((m_task-2))

pgr_mpd=$(pgrep -nx mpd)

taskset -pc $s_task $pgr_mpd

echo "$(pstree -npt $pgr_mpd)" | while read line ; do
 proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
 proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
 case $proc in
  mpd)		 taskset -cp $h_task $proc_nr ;;
  io)		 taskset -cp $s_task $proc_nr ;;
  rtio)		 taskset -cp $s_task $proc_nr
		 chrt -opv 0         $proc_nr ;;
  player)	 taskset -cp $s_task $proc_nr ;;
  decoder)	 taskset -cp $s_task $proc_nr ;;
  output)	 taskset -cp $m_task $proc_nr
		 chrt -opv 0         $proc_nr ;;
 esac
done
