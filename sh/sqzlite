#!/bin/sh

pgr_sqz=$(pidof squeezelite)

if [ -n "$pgr_sqz" ]; then
 read -p "Quit Squeezelite? [Y/n]" i
 [ "$i" != n ] && pkill squeezelite && echo "Quit Squeezelite!"
 exit
fi

(
 sec=0
 until [ "$(pidof squeezelite)" -gt 0 ] 2>/dev/null; do
  sleep 1
  sec=$(($sec+1))
  [ "$sec" -ge 5 ] && printf "\nSqueezelite is not available!\n" && exit
 done

 sleep 1

 pgr_sqz=$(pidof squeezelite)

 [ -z "$pgr_sqz" ] 2>/dev/null || [ ! "$pgr_sqz" -ge 1 ] 2>/dev/null && echo "Wrong pid of Squeezelite !" && exit

 procnr=$(nproc --all)
 if   [ "$procnr" -eq 2 ]; then
  m_task=0; s_task=1; h_task=1; o_task=1
 elif [ "$procnr" -eq 4 ]; then
  m_task=2; s_task=0; h_task=3; o_task=1
 elif [ "$procnr" -ge 8 ]; then
  m_task=6; s_task=4; h_task=2; o_task=0,1,3,5,7
 else
  m_task=0; s_task=0; h_task=0; o_task=0
 fi

# #sudo taskset -pc $s_task $pgr_sqz
# 
 count=2

 echo "$(pstree -npt $pgr_sqz)" | while read line ; do
 #proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $count in
   3) taskset -cp $m_task 			$proc_nr
      chrt    -op 0				$proc_nr ;;
 # *) taskset -cp $s_task,$h_task,$o_task $proc_nr ;;
  esac
  count=$(($count+1))
 done
 pkill -x sqzlite
) &

[ ! -e /dev/shm/squeezelite ] && sudo cp /usr/bin/squeezelite /dev/shm/squeezelite
/dev/shm/squeezelite -o pcm.hw -O ctl.hw -C 1 -a 42.58437:5.45545::1 -b 4010.57657:3080.86794 1</dev/null 2</dev/null 0</dev/null
