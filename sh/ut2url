#!/bin/sh

echo "\
(\e[32mj\e[0m) JTBC 뉴스
(\e[32mk\e[0m) KBS 뉴스
(\e[32mm\e[0m) MBC 뉴스
(\e[32ms\e[0m) SBS 뉴스
(\e[32mt\e[0m) tbs TV
(\e[32my\e[0m) 연합뉴스TV
(\e[32mv\e[0m) YTN LIVE
(\e[32m2\e[0m) YTN2
(\e[32mc\e[0m) YTN 사이언스
(\e[32ma\e[0m) ArteTV
(\e[32mg\e[0m) 맛있는 녀석들
(\e[32m0\e[0m) 김기열
(\e[32m1\e[0m) 여은파"

read -p " " i

m3u_dir="/home/parkmino/Videos"

case $i in
 j) ch=jtbcnews    ; url="https://www.youtube.com/user/JTBC10news"                  ;;
 k) ch=kbsnews     ; url="https://www.youtube.com/user/NewsKBS"                     ;;
 m) ch=mbcnews     ; url="https://www.youtube.com/channel/UCF4Wxdo3inmxP-Y59wXDsFw" ;;
 s) ch=sbsnews     ; url="https://www.youtube.com/channel/UCkinYTS9IHqOEwR1Sze2JTw" ;;
 t) ch=tbs         ; url="https://www.youtube.com/user/seoultbstv/featured"         ;;
 y) ch=yonhap      ; url="https://www.youtube.com/channel/UCTHCOPwqNfZ0uiKOvFyhGwg" ;;
 v) ch=ytn         ; url="https://www.youtube.com/user/ytnnews24"                   ;;
 2) ch=ytn2        ; url="https://www.youtube.com/channel/UCDww6ExpwQS0TzmREIOo40Q" ;;
 c) ch=ytn_science ; url="https://www.youtube.com/user/ytnscience"                  ;;
 r) ch=rtv         ; url="https://www.youtube.com/channel/UCvogIa1elSl9iwF4MbRXmAQ" ;;
 a) ch=artetv      ; url="https://www.youtube.com/channel/UCPglj7zGwmOlH8_31Tpgh8Q" ;;
 g) ch=tastyguys
    printf "#EXTM3U\n" > $m3u_dir/$ch.m3u
     nr=0
    for url in "https://www.youtube.com/channel/UCHcsy2HkeLAus-43nKDm09Q" "https://www.youtube.com/channel/UCsOW9TPy2TKkqCchUHL04Fg"; do
     live=
     label=
     uturl=
     live=$(curl -s "$url" | grep -o '지금 최초 공개 중.*' | grep -o '"videoId":"[0-9A-Za-z_-]*"' | head -1 | cut -d\" -f4)
     if [ ! -z "$live" ]; then
      printf "\e[32m#지금 최초 공개 중\e[0m\n"
      printf "$ch - https://youtu.be/$live\n"
     fi
     label=$(curl -s "$url" | grep -o '"label":.*' | head -1 | sed 's/\\"//g' | cut -d\" -f4)
     if [ -z "$label" ]; then
      printf "\e[32m정보 없음\e[0m\n\e[36mhttps://youtu.be/$uturl\e[0m\n"
     else
      days=$(echo "$label" | sed 's/.*) //; s/ 조회수.*//')
      prog=$(echo "$label" | sed 's/ \[맛있는.*//')
      printf "\e[32m$prog ($days)\e[0m\n"
     fi
     if [ "$nr" -eq 0 ]; then
      count=1
      nr=1
     else
      count=$(curl -s "$url" | grep -o '실시간"}}}' | wc -l)
     fi
     for i in $(seq $count); do
      uturl=$(curl -s "$url" | grep -n '실시간.*' | grep -o '"videoId":"[0-9A-Za-z_-]*"' | uniq | head -$i | tail -1 | cut -d\" -f4)
      if [ -z "$uturl" ]; then
       printf "YouTube live streaming is not available!\n\e[34m$url\e[0m\n"
       else
       printf "\e[34m$url\e[0m\n$ch - https://youtu.be/$uturl\n"
       printf "#EXTINF:-1,$(echo "$ch" | tr a-z A-Z)\nhttps://youtu.be/$uturl\n" >> $m3u_dir/$ch.m3u
      fi
     done
    done
    exit ;;
 0) ch=김기열
    url="https://www.youtube.com/c/%EA%B9%80%EA%B8%B0%EC%97%B4/videos"
    str=$(curl -s "$url" | grep -o '"title":{"runs":\[{"text":".\{500\}' | head -2)
    [ -z "$str" ] && printf "\e[32m정보 없음\e[0m\n\e[36m$url\e[0m\n" && exit
    printf "\e[34m$(percent $url)\e[0m\n"
    for i in $(seq 1 2); do
     label=$(echo "$str"   | head -$i | tail -1)
      days=$(echo "$label" | grep -o 'simpleText.*' | cut -d\" -f3)
      prog=$(echo "$label" | cut -d\" -f8)
     uturl=$(echo "$label" | grep -o 'watch?v=.*' | cut -d\= -f2 | cut -c -11)
     printf "\e[32m$prog ($days)\e[0m\n"
     printf "$ch - https://youtu.be/$uturl\n"
    done
    exit ;;
 1) ch=여은파
    url="https://www.youtube.com/playlist?list=PL9lPr2KXothXWfekXHx9J1LVNhl14yKpI"
    str=$(curl -s "$url" | grep -o 'label":".\{1000\}' | grep 여은파 | head -2 | cut -d\" -f3-)
    [ -z "$str" ] && printf "\e[32m정보 없음\e[0m\n\e[36m$url\e[0m\n" && exit
    printf "\e[34m$url\e[0m\n"
    for i in $(seq 1 2); do
     label=$(echo "$str"   | head -$i | tail -1)
      days=$(echo "$label" | cut -d\" -f1 | sed 's/.*STUDIO //; s/전 /전,/')
      prog=$(echo "$label" | sed 's/ 게시자.*//')
     uturl=$(echo "$label" | sed 's/.*watch?v=//' | cut -b -11)
     echo "\e[32m$prog ($days)\e[0m"
    #printf "\e[32m$prog ($days)\e[0m\n"
     printf "$ch - https://youtu.be/$uturl\n"
    done
    exit ;;
 *) exit ;;
esac

uturl=$(curl -s "$url" | grep -o '실시간.*' | grep -o '"videoId":"[0-9A-Za-z_-]*"' | head -1 | cut -d\" -f4)
if [ -z "$uturl" ]; then
 printf "YouTube live streaming is not available!\n\e[34m$url\e[0m\n"
else
 printf "\e[34m$url\e[0m\n$ch - https://youtu.be/$uturl\n"
#printf "\e[34m$url\e[0m\n$ch - plugin://plugin.video.youtube/play/?video_id=$uturl\n"
 printf "#EXTM3U\n#EXTINF:-1,$(echo "$ch" | tr a-z A-Z)\nhttps://youtu.be/$uturl\n" > $m3u_dir/$ch.m3u
fi
