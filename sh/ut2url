#!/bin/sh

echo "\
(\e[32mj\e[0m) JTBC 뉴스
(\e[32mk\e[0m) KBS 뉴스
(\e[32mm\e[0m) MBC 뉴스
(\e[32ms\e[0m) SBS 뉴스
(\e[32mt\e[0m) tbs TV
(\e[32my\e[0m) 연합뉴스TV
(\e[32mv\e[0m) YTN LIVE
(\e[32mf\e[0m) YTN 라이프
(\e[32mc\e[0m) YTN 사이언스
(\e[32mg\e[0m) 맛있는 녀석들
(\e[32m0\e[0m) 김기열
(\e[32m1\e[0m) 여은파"

read -p " " i

case $i in
 j) ch=jtbcnews    ; url="https://www.youtube.com/user/JTBC10news"                  ;;
 k) ch=kbsnews     ; url="https://www.youtube.com/user/NewsKBS"                     ;;
 m) ch=mbcnews     ; url="https://www.youtube.com/channel/UCF4Wxdo3inmxP-Y59wXDsFw" ;;
 s) ch=sbsnews     ; url="https://www.youtube.com/channel/UCkinYTS9IHqOEwR1Sze2JTw" ;;
 t) ch=tbs         ; url="https://www.youtube.com/user/seoultbstv/featured"         ;;
 y) ch=yonhap      ; url="https://www.youtube.com/channel/UCTHCOPwqNfZ0uiKOvFyhGwg" ;;
 v) ch=ytn         ; url="https://www.youtube.com/user/ytnnews24"                   ;;
 f) ch=ytn_life    ; url="https://www.youtube.com/channel/UCDww6ExpwQS0TzmREIOo40Q" ;;
 c) ch=ytn_science ; url="https://www.youtube.com/user/ytnscience"                  ;;
 r) ch=rtv         ; url="https://www.youtube.com/channel/UCvogIa1elSl9iwF4MbRXmAQ" ;;
 g) ch=tastyguys   ; url="https://www.youtube.com/channel/UCsOW9TPy2TKkqCchUHL04Fg"
    live=$(curl -s "$url" | grep -o '지금 최초 공개 중.*' | grep -o '"videoId":"[0-9A-Za-z_-]*"' | head -1 | cut -d\" -f4)
    if [ ! -z "$live" ]; then
     printf "\e[32m#지금 최초 공개 중\e[0m\n"
     printf "$ch - https://youtu.be/$live\n"
    fi
    label=$(curl -s "$url" | grep -o '"label":.*' | head -1 | sed 's/\\"//g' | cut -d\" -f4)
    [ -z "$label" ] && printf "\e[32m정보 없음\e[0m\n\e[36mhttps://youtu.be/$uturl\e[0m\n" && exit
    days=$(echo "$label" | sed 's/.*) //; s/ 조회수.*//')
    prog=$(echo "$label" | sed 's/ \[맛있는.*//')
    printf "\e[32m$prog ($days)\e[0m\n" ;;
 0) ch=김기열
    url="https://www.youtube.com/c/김기열/videos "
    str=$(curl -s "$url" | grep -o '"title":{"runs":\[{"text":".\{500\}' | head -2)
    [ -z "$str" ] && printf "\e[32m정보 없음\e[0m\n\e[36m$url\e[0m\n" && exit
    printf "\e[34m$url\e[0m\n"
    for i in 1 2; do
     label=$(echo "$str" | head -$i | tail -1)
      days=$(echo "$label" | grep -o 'simpleText.*' | cut -d\" -f3)
      prog=$(echo "$label" | cut -d\" -f8)
     uturl=$(echo "$label" | grep -o 'watch?v=.*' | cut -d\= -f2 | cut -c -11)
     printf "\e[32m$prog ($days)\e[0m\n"
     printf "$ch - https://youtu.be/$uturl\n"
    done
    exit ;;
 1) ch=여은파
    url="https://www.youtube.com/playlist?list=PL9lPr2KXothXWfekXHx9J1LVNhl14yKpI"
    str=$(curl -s "$url" | grep -o 'label":".\{1000\}' | grep 여은파 | head -2 | cut -d\" -f3-)
    [ -z "$str" ] && printf "\e[32m정보 없음\e[0m\n\e[36m$url\e[0m\n" && exit
    printf "\e[34m$url\e[0m\n"
    for i in 1 2; do
     label=$(echo "$str"   | head -$i | tail -1)
      days=$(echo "$label" | cut -d\" -f1 | sed 's/.*STUDIO //; s/전 /전,/')
      prog=$(echo "$label" | sed 's/ 게시자.*//')
     uturl=$(echo "$label" | sed 's/.*watch?v=//' | cut -b -11)
     echo "\e[32m$prog ($days)\e[0m"
     #printf "\e[32m$prog ($days)\e[0m\n"
     printf "$ch - https://youtu.be/$uturl\n"
    done
    exit ;;
 *) exit ;;
esac

uturl=$(curl -s "$url" | grep -o '실시간.*' | grep -o '"videoId":"[0-9A-Za-z_-]*"' | head -1 | cut -d\" -f4)
[ -z "$uturl" ] && printf "YouTube live streaming is not available!\n\e[34m$url\e[0m\n" && exit

 printf "\e[34m$url\e[0m\n$ch - https://youtu.be/$uturl\n"
#printf "\e[34m$url\e[0m\n$ch - plugin://plugin.video.youtube/play/?video_id=$uturl\n"

printf "#EXTM3U\n#EXTINF:-1,$(echo "$ch" | tr a-z A-Z)\nhttps://youtu.be/$uturl\n" > /home/parkmino/Videos/$ch.m3u
