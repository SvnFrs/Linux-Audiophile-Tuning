#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.


musicpd_bg () {

 until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -np $(pgrep -x mpd) 2>/dev/null | grep -q output); do
  sleep 1
 done
 sleep 1

 pgr_mpd=$(pgrep -x mpd)

 taskset -pc $m_task $pgr_mpd
 #renice -1 -p       $pgr_mpd

 echo "$(pstree -np $pgr_mpd)" | while read line ; do
  proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $proc in
   mpd)		 taskset -cp $s_task $proc_nr ;;
   io)		 taskset -cp $s_task $proc_nr ;;
   player)	 taskset -cp $s_task $proc_nr ;;
   decoder)	 taskset -cp $s_task $proc_nr ;;
   output)	 taskset -cp $m_task $proc_nr
		#renice -1 -p	     $proc_nr
		 chrt -op 0	     $proc_nr ;;
  esac
 done

 nohup taskset -ac $s_task /dev/shm/upmpdcli -c /dev/shm/upmpdcli.conf >/dev/null 2>&1 &

}

cp /usr/lib/i386-linux-gnu/libasound.so.2.0.0.sav /dev/shm/libasound.so.2.0.0
#ln -sf /dev/shm/libasound.so.2.0.0 /usr/lib/i386-linux-gnu/libasound.so.2
cp /usr/share/alsa/alsa.conf.sav /dev/shm/alsa.conf
#ln -sf /dev/shm/alsa.conf /usr/share/alsa/alsa.conf
cp /usr/bin/mpd /usr/bin/upmpdcli /etc/upmpdcli.conf /dev/shm/
cp /etc/mpd.conf.sav /dev/shm/mpd.conf

echo noop > /sys/block/mmcblk0/queue/scheduler

for i in ondemand conservative powersave; do
 grep -q $i /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors && gov="$i"
done
[ "$gov" != "" ] && echo "$gov" | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor

for i in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 {print $1}'); do
 renice -2 $i
done

for i in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}'); do
 chrt -op 0 $i
 renice  -3 $i
done

swapoff -a

m_task=$(($(nproc --all)-1))
[ "$m_task" -ge 3 ] && s_task=$((m_task-2)) || s_task=0

musicpd_bg &
/dev/shm/mpd /dev/shm/mpd.conf >/dev/null 2>&1

exit 0
