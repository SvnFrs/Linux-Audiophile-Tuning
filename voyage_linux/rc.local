#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

#[ ! -e /usr/lib/i386-linux-gnu/libasound.so.2 ] && [ -e /usr/lib/i386-linux-gnu/libasound.so.2.sav ] && mv /usr/lib/i386-linux-gnu/libasound.so.2.sav /usr/lib/i386-linux-gnu/libasound.so.2

/usr/bin/mpd /etc/mpd.conf &

#ifconfig eth0 txqueuelen 1875

for i in $(ps -eo pid,class,comm | grep -E '(FF|RR)' | awk '$3 !~ /migration/ && $3 !~ /mpd/ {print $1}'); do
 chrt -op 0 $i
done

for i in $(ps -eo pid,class,ni,comm | grep -i TS | awk '$3 < 0 {print $1}'); do
 renice 0 $i
done

until [ $(pgrep -x mpd) -gt 0 ] 2>/dev/null && $(pstree -np $(pgrep -x mpd) | grep -q output); do
 sleep 1
done
sleep 1

pgr_mpd=$(pgrep -x mpd)

if [ "$(nproc --all)" -ge "4" ]; then

 for pid in $(ps -eo pid,comm | awk '$2 !~ /mpd/ && $2 !~ /systemd/ {print $1}') ; do
  taskset -acp 0 $pid | true
 done

 taskset -cp 0 $pgr_mpd
 echo "$(pstree -np $pgr_mpd)" | while read line ; do
     proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $proc in
   mpd)		taskset -cp 0 $proc_nr
		renice -2  -p $proc_nr ;;
   io)		taskset -cp 0 $proc_nr
		renice +3  -p $proc_nr
		chrt -ip 0    $proc_nr ;;
   player)	taskset -cp 2 $proc_nr
		renice -3 -p  $proc_nr ;;
   decoder)	taskset -cp 1 $proc_nr
		renice -4 -p  $proc_nr ;;
   output)	taskset -cp 3 $proc_nr
		renice -5 -p  $proc_nr
		chrt -op 0    $proc_nr ;;
  esac
 done
else
 echo "$(pstree -np $pgr_mpd)" | while read line ; do
     proc=$(echo "$line" | cut -d "{" -f2 | cut -d "}" -f1 | cut -d ":" -f1)
  proc_nr=$(echo "$line" | cut -d "}" -f2 | cut -d "(" -f2 | cut -d ")" -f1)
  case $proc in
   mpd)         renice -2 -p $proc_nr ;;
   io)          chrt -ip 0   $proc_nr
		renice +3 -p $proc_nr ;;
   player)      renice -3 -p $proc_nr ;;
   decoder)     renice -4 -p $proc_nr ;;
   output)      renice -5 -p $proc_nr
		chrt -op 0   $proc_nr ;;
  esac
 done
fi

taskset -ac 0 nice -n -1 /usr/bin/upmpdcli -c /etc/upmpdcli.conf &

grep -qs chunkHighMark /etc/polipo/config || sed -i "\$achunkHighMark = $(($(grep MemTotal /proc/meminfo | awk '{print $2}')*256))" /etc/polipo/config
chrt -i 0 taskset -ac 0 /usr/bin/polipo &

### For Criterion from Reference Club
#amixer -D control set 'XMOS Clock Selector',0 Capture 0 0 off off
#amixer -D control set 'XMOS Clock Selector',1 Capture 0 off

#[ -e /usr/lib/i386-linux-gnu/libasound.so.2 ] && mv /usr/lib/i386-linux-gnu/libasound.so.2 /usr/lib/i386-linux-gnu/libasound.so.2.sav

### Remove services
for i in watchdog rpcbind dnsmasq cron nfs-common wd_keepalive # dbus ssh
do
 service $i stop
done
### Lower init priority
taskset -cp 0 1
### Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi
### Show release
cat /root/release

exit 0
